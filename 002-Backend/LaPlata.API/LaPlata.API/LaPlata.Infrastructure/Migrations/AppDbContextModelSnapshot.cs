// <auto-generated />
using System;
using LaPlata.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaPlata.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LaPlata.Domain.Models.Assinatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<int?>("ValorCentavos")
                        .HasColumnType("int");

                    b.Property<int>("ValorInteiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Assinaturas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.AssinaturaFatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AssinaturaId")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssinaturaId");

                    b.HasIndex("FaturaId");

                    b.ToTable("AssinaturasFatura");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DiaFechamento")
                        .HasColumnType("int");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QtdParcelas")
                        .HasColumnType("int");

                    b.Property<int?>("ValorCentavos")
                        .HasColumnType("int");

                    b.Property<int>("ValorInteiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.CompraFatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("Parcela")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("FaturaId");

                    b.ToTable("ComprasFatura");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<int?>("ValorCentavos")
                        .HasColumnType("int");

                    b.Property<int>("ValorInteiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.ContaVariavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("ContasVariaveis");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataDespesa")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("QtdParcelas")
                        .HasColumnType("int");

                    b.Property<int?>("ValorCentavos")
                        .HasColumnType("int");

                    b.Property<int>("ValorInteiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAssinaturas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalCompras")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalComprasParceladas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalFatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.LogErro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DtoJson")
                        .HasColumnType("longtext");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LogsErro");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.PagamentoConta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId")
                        .IsUnique();

                    b.HasIndex("ContaId");

                    b.ToTable("PagamentosConta");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.PagamentoContaVariavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("ContaVariavelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ValorCentavos")
                        .HasColumnType("int");

                    b.Property<int>("ValorInteiro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId")
                        .IsUnique();

                    b.HasIndex("ContaVariavelId");

                    b.ToTable("PagamentosContaVariavel");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Assinatura", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Cartao", "Cartao")
                        .WithMany("Assinaturas")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.AssinaturaFatura", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Assinatura", "Assinatura")
                        .WithMany("AssinaturasFatura")
                        .HasForeignKey("AssinaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaPlata.Domain.Models.Fatura", "Fatura")
                        .WithMany("AssinaturasFatura")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assinatura");

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Compra", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Cartao", "Cartao")
                        .WithMany("Compras")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaPlata.Domain.Models.Categoria", "Categoria")
                        .WithMany("Compras")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.CompraFatura", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Compra", "Compra")
                        .WithMany("ComprasFatura")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaPlata.Domain.Models.Fatura", "Fatura")
                        .WithMany("ComprasFatura")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Conta", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Categoria", "Categoria")
                        .WithMany("Contas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.ContaVariavel", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Categoria", "Categoria")
                        .WithMany("ContasVariaveis")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Despesa", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Categoria", "Categoria")
                        .WithMany("Despesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Fatura", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Cartao", "Cartao")
                        .WithMany("Faturas")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.PagamentoConta", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Compra", "Compra")
                        .WithOne("PagamentoConta")
                        .HasForeignKey("LaPlata.Domain.Models.PagamentoConta", "CompraId");

                    b.HasOne("LaPlata.Domain.Models.Conta", "Conta")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.PagamentoContaVariavel", b =>
                {
                    b.HasOne("LaPlata.Domain.Models.Compra", "Compra")
                        .WithOne("PagamentoContaVariavel")
                        .HasForeignKey("LaPlata.Domain.Models.PagamentoContaVariavel", "CompraId");

                    b.HasOne("LaPlata.Domain.Models.ContaVariavel", "ContaVariavel")
                        .WithMany("Pagamentos")
                        .HasForeignKey("ContaVariavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("ContaVariavel");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Assinatura", b =>
                {
                    b.Navigation("AssinaturasFatura");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Cartao", b =>
                {
                    b.Navigation("Assinaturas");

                    b.Navigation("Compras");

                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Contas");

                    b.Navigation("ContasVariaveis");

                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Compra", b =>
                {
                    b.Navigation("ComprasFatura");

                    b.Navigation("PagamentoConta");

                    b.Navigation("PagamentoContaVariavel");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Conta", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.ContaVariavel", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("LaPlata.Domain.Models.Fatura", b =>
                {
                    b.Navigation("AssinaturasFatura");

                    b.Navigation("ComprasFatura");
                });
#pragma warning restore 612, 618
        }
    }
}
