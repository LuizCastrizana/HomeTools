{"ast":null,"code":"import { StatusContaEnum } from 'src/app/enums/statusContaEnum';\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport { ContaMapper } from 'src/app/mappers/financas/ContaMapper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Financas/conta.service\";\nimport * as i2 from \"src/app/services/Financas/conta-variavel.service\";\nimport * as i3 from \"src/app/services/categoria.service\";\nimport * as i4 from \"src/app/services/validacao.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction EditarContaComponent_input_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 23);\n  }\n}\n\nfunction EditarContaComponent_input_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 24);\n  }\n}\n\nfunction EditarContaComponent_select_26_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categoria_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", categoria_r5.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r5.Descricao);\n  }\n}\n\nfunction EditarContaComponent_select_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_select_26_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.Conta.Categoria.Id = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 26);\n    i0.ɵɵtext(2, \"Selecione...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EditarContaComponent_select_26_option_3_Template, 2, 2, \"option\", 27);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categorias_r3 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.Conta.Categoria.Id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", categorias_r3.Valor);\n  }\n}\n\nexport class EditarContaComponent {\n  constructor(serviceConta, serviceContaVariavel, serviceCategoria, serviceValidacao, router, route) {\n    this.serviceConta = serviceConta;\n    this.serviceContaVariavel = serviceContaVariavel;\n    this.serviceCategoria = serviceCategoria;\n    this.serviceValidacao = serviceValidacao;\n    this.router = router;\n    this.route = route;\n    this.Conta = {\n      Id: 0,\n      Descricao: '',\n      ValorInteiro: 0,\n      ValorCentavos: 0,\n      DiaVencimento: 0,\n      Categoria: {},\n      Pagamentos: [],\n      UltimoPagamento: undefined,\n      Variavel: false,\n      StatusId: StatusContaEnum.Pendente\n    };\n    this.TipoContaId = 0;\n    this.Categorias$ = {};\n  }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    const tipo = this.route.snapshot.paramMap.get('tipo');\n    this.Categorias$ = this.serviceCategoria.listar();\n\n    if (id != null) {\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Variavel;\n        this.serviceContaVariavel.buscarPorId(id).subscribe(contaDto => {\n          this.Conta = ContaMapper.ContaVariavelDtoToConta(contaDto.valor);\n        });\n      } else if (tipo == TipoContaEnum.Fixa.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Fixa;\n        this.serviceConta.buscarPorId(id).subscribe(respostaAPI => {\n          this.Conta = ContaMapper.ContaDtoToConta(respostaAPI.valor);\n        });\n      }\n    }\n\n    if (this.TipoContaId == TipoContaEnum.Variavel) {\n      document.getElementById(\"divValor\").style.display = \"none\";\n    }\n  }\n\n  selecionaTipoConta() {\n    let tipoConta = document.getElementById(\"tipoConta\").value;\n\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\n      document.getElementById(\"divValor\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"divValor\").style.display = \"none\";\n    }\n  }\n\n  salvarConta() {\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\n      this.serviceConta.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaDto(this.Conta)).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    } else if (this.TipoContaId == TipoContaEnum.Variavel) {\n      this.serviceContaVariavel.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaVariavelDto(this.Conta)).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n  }\n\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n\n  apenasNumeros(event) {\n    if (!this.serviceValidacao.apenasNumeros(event)) {\n      event.preventDefault();\n    }\n  }\n\n  diaMes(event) {\n    if (!this.serviceValidacao.diaMes(event)) {\n      event.preventDefault();\n    }\n  }\n\n}\n\nEditarContaComponent.ɵfac = function EditarContaComponent_Factory(t) {\n  return new (t || EditarContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ContaVariavelService), i0.ɵɵdirectiveInject(i3.CategoriaService), i0.ɵɵdirectiveInject(i4.ValidacaoService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n};\n\nEditarContaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditarContaComponent,\n  selectors: [[\"app-editar-conta\"]],\n  decls: 46,\n  vars: 9,\n  consts: [[1, \"container\", \"main\", \"ff-verdana\"], [1, \"titulo-pagina\", \"ff-verdana\"], [1, \"form\", \"conteudo-pagina\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col-4\"], [1, \"form-group\"], [\"for\", \"descricao\"], [\"type\", \"text\", \"id\", \"txtDescricao\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", \"name\", \"Descricao\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-2\"], [\"for\", \"diaVencimento\"], [\"type\", \"text\", \"id\", \"txtDiaVencimento\", \"placeholder\", \"Dia vencimento\", \"name\", \"DiaVencimento\", 1, \"form-control\", 3, \"ngModel\", \"keypress\", \"paste\", \"ngModelChange\"], [1, \"col-3\"], [\"for\", \"tipoCconta\"], [\"type\", \"text\", \"class\", \"form-control\", \"value\", \"Vari\\u00E1vel\", \"readonly\", \"\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", \"value\", \"Fixa\", \"readonly\", \"\", 4, \"ngIf\"], [\"for\", \"CategoriaId\"], [\"id\", \"selCategoriaId\", \"class\", \"form-control\", \"name\", \"CategoriaId\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"divValor\", 1, \"row\"], [\"type\", \"text\", \"id\", \"txtValorInteiro\", \"placeholder\", \"Valor\", \"name\", \"ValorInteiro\", 1, \"form-control\", 3, \"ngModel\", \"keypress\", \"paste\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"txtValorCentavos\", \"placeholder\", \"Valor Centavos\", \"name\", \"ValorCentavos\", 1, \"form-control\", 3, \"ngModel\", \"keypress\", \"paste\", \"ngModelChange\"], [1, \"col-12\"], [\"type\", \"submit\", \"id\", \"btnSubmit\", 1, \"btn\"], [\"type\", \"button\", \"id\", \"btnCancelar\", 1, \"btn\", \"btn-red\", 3, \"click\"], [\"type\", \"text\", \"value\", \"Vari\\u00E1vel\", \"readonly\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"value\", \"Fixa\", \"readonly\", \"\", 1, \"form-control\"], [\"id\", \"selCategoriaId\", \"name\", \"CategoriaId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function EditarContaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Editar Conta\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditarContaComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.salvarConta();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.Conta.Descricao = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Dia venc.:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"keypress\", function EditarContaComponent_Template_input_keypress_15_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"paste\", function EditarContaComponent_Template_input_paste_15_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.Conta.DiaVencimento = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 5)(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Tipo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, EditarContaComponent_input_20_Template, 1, 0, \"input\", 13);\n      i0.ɵɵtemplate(21, EditarContaComponent_input_21_Template, 1, 0, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"div\", 5)(24, \"label\", 15);\n      i0.ɵɵtext(25, \"Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, EditarContaComponent_select_26_Template, 4, 2, \"select\", 16);\n      i0.ɵɵpipe(27, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 17)(29, \"div\", 11)(30, \"div\", 5)(31, \"label\", 6);\n      i0.ɵɵtext(32, \"Valor inteiro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"input\", 18);\n      i0.ɵɵlistener(\"keypress\", function EditarContaComponent_Template_input_keypress_33_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"paste\", function EditarContaComponent_Template_input_paste_33_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_33_listener($event) {\n        return ctx.Conta.ValorInteiro = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"div\", 11)(35, \"div\", 5)(36, \"label\", 6);\n      i0.ɵɵtext(37, \"Valor centavos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 19);\n      i0.ɵɵlistener(\"keypress\", function EditarContaComponent_Template_input_keypress_38_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"paste\", function EditarContaComponent_Template_input_paste_38_listener($event) {\n        return ctx.apenasNumeros($event);\n      })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.Conta.ValorCentavos = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(39, \"div\", 3)(40, \"div\", 20)(41, \"div\", 5)(42, \"button\", 21);\n      i0.ɵɵtext(43, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function EditarContaComponent_Template_button_click_44_listener() {\n        return ctx.cancelar();\n      });\n      i0.ɵɵtext(45, \"Cancelar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.Descricao);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.DiaVencimento);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.Conta.Variavel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.Conta.Variavel);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(27, 7, ctx.Categorias$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorInteiro);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorCentavos);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm, i6.AsyncPipe],\n  styles: [\".conteudo-pagina[_ngcontent-%COMP%], .titulo-pagina[_ngcontent-%COMP%] {\\r\\n  min-width: 0 !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXRhci1jb250YS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6ImVkaXRhci1jb250YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRldWRvLXBhZ2luYSwgLnRpdHVsby1wYWdpbmEge1xyXG4gIG1pbi13aWR0aDogMCAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["StatusContaEnum","TipoContaEnum","ContaMapper","i0","EditarContaComponent","constructor","serviceConta","serviceContaVariavel","serviceCategoria","serviceValidacao","router","route","Id","Descricao","ValorInteiro","ValorCentavos","DiaVencimento","Categoria","Pagamentos","UltimoPagamento","undefined","Variavel","StatusId","Pendente","ngOnInit","id","snapshot","paramMap","get","tipo","Categorias$","listar","toLocaleString","TipoContaId","buscarPorId","subscribe","contaDto","Conta","ContaVariavelDtoToConta","valor","Fixa","respostaAPI","ContaDtoToConta","document","getElementById","style","display","selecionaTipoConta","tipoConta","value","salvarConta","atualizar","ContaToUpdateContaDto","navigate","ContaToUpdateContaVariavelDto","cancelar","apenasNumeros","event","preventDefault","diaMes","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\editar-conta\\editar-conta.component.ts","D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\editar-conta\\editar-conta.component.html"],"sourcesContent":["import { Categoria } from './../../../interfaces/categoria';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StatusContaEnum } from 'src/app/enums/statusContaEnum';\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport { RespostaApi } from 'src/app/interfaces/api-dto/respostaApi';\nimport { ReadConta } from 'src/app/interfaces/financas/readConta';\nimport { ContaMapper } from 'src/app/mappers/financas/ContaMapper';\nimport { ContaVariavelService } from 'src/app/services/Financas/conta-variavel.service';\nimport { ContaService } from 'src/app/services/Financas/conta.service';\nimport { CategoriaService } from 'src/app/services/categoria.service';\nimport { ValidacaoService } from 'src/app/services/validacao.service';\n\n@Component({\n  selector: 'app-editar-conta',\n  templateUrl: './editar-conta.component.html',\n  styleUrls: ['./editar-conta.component.css']\n})\nexport class EditarContaComponent implements OnInit {\n\n  Conta: ReadConta = {\n    Id: 0,\n    Descricao: '',\n    ValorInteiro: 0,\n    ValorCentavos: 0,\n    DiaVencimento: 0,\n    Categoria: {} as Categoria,\n    Pagamentos: [],\n    UltimoPagamento: undefined,\n    Variavel: false,\n    StatusId: StatusContaEnum.Pendente,\n  };\n\n  TipoContaId: number = 0;\n  Categorias$: Observable<RespostaApi<Categoria[]>> = {} as Observable<RespostaApi<Categoria[]>>;\n\n  constructor(\n    private serviceConta: ContaService,\n    private serviceContaVariavel: ContaVariavelService,\n    private serviceCategoria: CategoriaService,\n    private serviceValidacao: ValidacaoService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    const tipo = this.route.snapshot.paramMap.get('tipo');\n    this.Categorias$ = this.serviceCategoria.listar()\n    if (id != null) {\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Variavel;\n        this.serviceContaVariavel.buscarPorId(id!).subscribe(contaDto => {\n          this.Conta = ContaMapper.ContaVariavelDtoToConta(contaDto.valor);\n        });\n      }\n      else if (tipo == TipoContaEnum.Fixa.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Fixa;\n        this.serviceConta.buscarPorId(id!).subscribe(respostaAPI => {\n          this.Conta = ContaMapper.ContaDtoToConta(respostaAPI.valor);\n        });\n      }\n    }\n    if (this.TipoContaId == TipoContaEnum.Variavel) {\n      document.getElementById(\"divValor\")!.style.display = \"none\";\n    }\n  }\n\n  selecionaTipoConta() {\n    let tipoConta = (<HTMLInputElement>document.getElementById(\"tipoConta\")).value;\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\n      document.getElementById(\"divValor\")!.style.display = \"flex\";\n    } else {\n      document.getElementById(\"divValor\")!.style.display = \"none\";\n    }\n  }\n\n  salvarConta() {\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\n      this.serviceConta.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaDto(this.Conta)).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n    else if (this.TipoContaId == TipoContaEnum.Variavel){\n      this.serviceContaVariavel.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaVariavelDto(this.Conta)).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n\n  apenasNumeros(event: any) {\n    if (!this.serviceValidacao.apenasNumeros(event)) {\n      event.preventDefault();\n    }\n  }\n\n  diaMes(event: any) {\n    if (!this.serviceValidacao.diaMes(event)) {\n      event.preventDefault();\n    }\n  }\n}\n","<div class=\"container main ff-verdana\">\n  <div class=\"titulo-pagina ff-verdana\">\n    <h1>Editar Conta</h1>\n  </div>\n  <form (ngSubmit)=\"salvarConta()\" class=\"form conteudo-pagina\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Descrição</label>\n          <input type=\"text\" class=\"form-control\" id=\"txtDescricao\" placeholder=\"Descrição\" name=\"Descricao\" [(ngModel)]=\"Conta.Descricao\">\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"form-group\">\n          <label for=\"diaVencimento\">Dia venc.:</label>\n          <input type=\"text\" class=\"form-control\" id=\"txtDiaVencimento\" placeholder=\"Dia vencimento\" name=\"DiaVencimento\"\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.DiaVencimento\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"tipoCconta\">Tipo</label>\n          <input *ngIf=\"Conta.Variavel\" type=\"text\" class=\"form-control\" value=\"Variável\" readonly>\n          <input *ngIf=\"!Conta.Variavel\" type=\"text\" class=\"form-control\" value=\"Fixa\" readonly>\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"CategoriaId\">Categoria</label>\n          <select *ngIf=\"Categorias$ | async as categorias\" id=\"selCategoriaId\" class=\"form-control\" name=\"CategoriaId\" [(ngModel)]=\"Conta.Categoria.Id\">\n            <option value=\"0\">Selecione...</option>\n            <option *ngFor=\"let categoria of categorias.Valor\" [value]=\"categoria.Id\">{{ categoria.Descricao }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" id=\"divValor\">\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Valor inteiro</label>\n          <input type=\"text\" class=\"form-control\" id=\"txtValorInteiro\" placeholder=\"Valor\" name=\"ValorInteiro\"\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorInteiro\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Valor centavos</label>\n          <input type=\"text\" class=\"form-control\" id=\"txtValorCentavos\" placeholder=\"Valor Centavos\" name=\"ValorCentavos\"\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorCentavos\">\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <button type=\"submit\" id=\"btnSubmit\" class=\"btn\">Salvar</button>\n          <button type=\"button\" id=\"btnCancelar\" class=\"btn btn-red\" (click)=\"cancelar()\">Cancelar</button>\n        </div>\n      </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module"}