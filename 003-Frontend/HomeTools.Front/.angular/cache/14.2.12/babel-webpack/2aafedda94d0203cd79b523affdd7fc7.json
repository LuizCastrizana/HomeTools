{"ast":null,"code":"import { StatusContaEnum } from 'src/app/enums/statusContaEnum';\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Financas/conta.service\";\nimport * as i2 from \"src/app/services/Financas/conta-variavel.service\";\nimport * as i3 from \"src/app/services/categoria.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction EditarContaComponent_select_31_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categoria_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", categoria_r3.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r3.Descricao);\n  }\n}\n\nfunction EditarContaComponent_select_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_select_31_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.Conta.Categoria.Id = $event);\n    });\n    i0.ɵɵelementStart(1, \"option\", 14);\n    i0.ɵɵtext(2, \"Selecione...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EditarContaComponent_select_31_option_3_Template, 2, 2, \"option\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categorias_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.Conta.Categoria.Id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", categorias_r1.Valor);\n  }\n}\n\nexport class EditarContaComponent {\n  constructor(serviceConta, serviceContaVariavel, serviceCategoria, router, route) {\n    this.serviceConta = serviceConta;\n    this.serviceContaVariavel = serviceContaVariavel;\n    this.serviceCategoria = serviceCategoria;\n    this.router = router;\n    this.route = route;\n    this.Conta = {\n      Id: 0,\n      Descricao: '',\n      ValorInteiro: 0,\n      ValorCentavos: 0,\n      DiaVencimento: 0,\n      Categoria: {},\n      Pagamentos: [],\n      UltimoPagamento: undefined,\n      Variavel: false,\n      StatusId: StatusContaEnum.Pendente\n    };\n    this.TipoContaId = 0;\n    this.Categorias$ = {};\n  }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    const tipo = this.route.snapshot.paramMap.get('tipo');\n    this.Categorias$ = this.serviceCategoria.listar();\n\n    if (id != null) {\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Variavel;\n        this.serviceContaVariavel.buscarPorId(id).subscribe(contaDto => {\n          this.Conta = {\n            Id: contaDto.Valor.Id,\n            Descricao: contaDto.Valor.Descricao,\n            ValorInteiro: 0,\n            ValorCentavos: 0,\n            DiaVencimento: contaDto.Valor.DiaVencimento,\n            Categoria: contaDto.Valor.Categoria,\n            Pagamentos: [],\n            UltimoPagamento: undefined,\n            Variavel: true,\n            StatusId: StatusContaEnum.Pendente\n          };\n          contaDto.Valor.Pagamentos.forEach(pagamentoDto => {\n            let pagamento = {\n              Id: pagamentoDto.Id,\n              ValorInteiro: pagamentoDto.ValorInteiro,\n              ValorCentavos: pagamentoDto.ValorCentavos,\n              DataPagamento: pagamentoDto.DataPagamento,\n              ContaId: pagamentoDto.ContaId\n            };\n            this.Conta.Pagamentos.push(pagamento);\n          });\n\n          if (this.Conta.Pagamentos.length > 0) {\n            this.Conta.UltimoPagamento = this.Conta.Pagamentos.sort((a, b) => b.Id - a.Id)[0].DataPagamento;\n            let UltimoPagamento = new Date(this.Conta.UltimoPagamento != undefined ? this.Conta.UltimoPagamento : 0);\n\n            if (UltimoPagamento.getMonth() == new Date(Date.now()).getMonth()) {\n              this.Conta.StatusId = StatusContaEnum.Paga;\n            } else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() && this.Conta.DiaVencimento < new Date(Date.now()).getDay()) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            } else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() - 1) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n          }\n        });\n      } else if (tipo == TipoContaEnum.Fixo.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Fixo;\n        this.serviceConta.buscarPorId(id).subscribe(respostaAPI => {\n          this.Conta = {\n            Id: respostaAPI.Valor.Id,\n            Descricao: respostaAPI.Valor.Descricao,\n            ValorInteiro: respostaAPI.Valor.ValorInteiro,\n            ValorCentavos: respostaAPI.Valor.ValorCentavos,\n            DiaVencimento: respostaAPI.Valor.DiaVencimento,\n            Categoria: respostaAPI.Valor.Categoria,\n            Pagamentos: [],\n            UltimoPagamento: undefined,\n            Variavel: false,\n            StatusId: StatusContaEnum.Pendente\n          };\n          respostaAPI.Valor.Pagamentos.forEach(pagamentoDto => {\n            let pagamento = {\n              Id: pagamentoDto.Id,\n              ValorInteiro: 0,\n              ValorCentavos: 0,\n              DataPagamento: pagamentoDto.DataPagamento,\n              ContaId: pagamentoDto.ContaId\n            };\n            this.Conta.Pagamentos.push(pagamento);\n          });\n\n          if (this.Conta.Pagamentos.length > 0) {\n            this.Conta.UltimoPagamento = this.Conta.Pagamentos.sort((a, b) => b.Id - a.Id)[0].DataPagamento;\n            let UltimoPagamento = new Date(this.Conta.UltimoPagamento != undefined ? this.Conta.UltimoPagamento : 0);\n\n            if (UltimoPagamento.getMonth() == new Date(Date.now()).getMonth()) {\n              this.Conta.StatusId = StatusContaEnum.Paga;\n            } else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() && this.Conta.DiaVencimento < new Date(Date.now()).getDay()) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            } else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() - 1) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n          }\n        });\n      }\n    }\n\n    if (this.TipoContaId == TipoContaEnum.Variavel) {\n      document.getElementById(\"divValor\").style.display = \"none\";\n    }\n  }\n\n  selecionaTipoConta() {\n    let tipoConta = document.getElementById(\"tipoConta\").value;\n\n    if (tipoConta == TipoContaEnum.Fixo.toLocaleString()) {\n      document.getElementById(\"divValor\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"divValor\").style.display = \"none\";\n    }\n  }\n\n  salvarConta() {\n    if (this.TipoContaId == TipoContaEnum.Fixo) {\n      let conta = {\n        Descricao: this.Conta.Descricao,\n        ValorInteiro: this.Conta.ValorInteiro,\n        ValorCentavos: this.Conta.ValorCentavos,\n        DiaVencimento: this.Conta.DiaVencimento,\n        CategoriaId: this.Conta.Categoria.Id\n      };\n      this.serviceConta.atualizar(this.Conta.Id.toLocaleString(), conta).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    } else if (this.TipoContaId == TipoContaEnum.Variavel) {\n      let contaVariavel = {\n        Descricao: this.Conta.Descricao,\n        DiaVencimento: this.Conta.DiaVencimento,\n        CategoriaId: this.Conta.Categoria.Id\n      };\n      this.serviceContaVariavel.atualizar(this.Conta.Id.toLocaleString(), contaVariavel).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n  }\n\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n\n}\n\nEditarContaComponent.ɵfac = function EditarContaComponent_Factory(t) {\n  return new (t || EditarContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ContaVariavelService), i0.ɵɵdirectiveInject(i3.CategoriaService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n};\n\nEditarContaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditarContaComponent,\n  selectors: [[\"app-editar-conta\"]],\n  decls: 51,\n  vars: 8,\n  consts: [[1, \"container\", \"main\", \"ff-verdana\"], [1, \"titulo-pagina\", \"ff-verdana\"], [1, \"conteudo-pagina\"], [1, \"row\", \"form-row\"], [1, \"col-4\"], [1, \"form-group\"], [\"for\", \"descricao\"], [\"type\", \"text\", \"id\", \"descricao\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-2\"], [\"for\", \"diaVencimento\"], [\"type\", \"number\", \"id\", \"diaVencimento\", \"placeholder\", \"Dia vencimento\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-3\"], [\"for\", \"tipoCconta\"], [\"name\", \"tipoConta\", \"id\", \"tipoConta\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"0\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"for\", \"CategoriaId\"], [\"name\", \"CategoriaId\", \"id\", \"CategoriaId\", \"class\", \"form-control\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"divValor\", 1, \"row\", \"form-row\"], [\"type\", \"number\", \"id\", \"valorInteiro\", \"placeholder\", \"Valor\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"id\", \"valorCentavos\", \"placeholder\", \"Valor Centavos\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-12\"], [\"type\", \"button\", 1, \"btn\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-red\", 3, \"click\"], [\"name\", \"CategoriaId\", \"id\", \"CategoriaId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function EditarContaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Inlcuir Conta\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.Conta.Descricao = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Dia venc.:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.Conta.DiaVencimento = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 5)(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Tipo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"select\", 13);\n      i0.ɵɵlistener(\"change\", function EditarContaComponent_Template_select_change_20_listener() {\n        return ctx.selecionaTipoConta();\n      })(\"ngModelChange\", function EditarContaComponent_Template_select_ngModelChange_20_listener($event) {\n        return ctx.TipoContaId = $event;\n      });\n      i0.ɵɵelementStart(21, \"option\", 14);\n      i0.ɵɵtext(22, \"Selecione...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 15);\n      i0.ɵɵtext(24, \"Vari\\u00E1vel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 16);\n      i0.ɵɵtext(26, \"Fixa\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"div\", 11)(28, \"div\", 5)(29, \"label\", 17);\n      i0.ɵɵtext(30, \"Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, EditarContaComponent_select_31_Template, 4, 2, \"select\", 18);\n      i0.ɵɵpipe(32, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 19)(34, \"div\", 11)(35, \"div\", 5)(36, \"label\", 6);\n      i0.ɵɵtext(37, \"Valor inteiro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 20);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.Conta.ValorInteiro = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(39, \"div\", 11)(40, \"div\", 5)(41, \"label\", 6);\n      i0.ɵɵtext(42, \"Valor centavos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 21);\n      i0.ɵɵlistener(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_43_listener($event) {\n        return ctx.Conta.ValorCentavos = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(44, \"div\", 3)(45, \"div\", 22)(46, \"div\", 5)(47, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function EditarContaComponent_Template_button_click_47_listener() {\n        return ctx.salvarConta();\n      });\n      i0.ɵɵtext(48, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function EditarContaComponent_Template_button_click_49_listener() {\n        return ctx.cancelar();\n      });\n      i0.ɵɵtext(50, \"Cancelar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.Descricao);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.DiaVencimento);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.TipoContaId);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(32, 6, ctx.Categorias$));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorInteiro);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorCentavos);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, i5.AsyncPipe],\n  styles: [\".conteudo-pagina[_ngcontent-%COMP%], .titulo-pagina[_ngcontent-%COMP%] {\\r\\n  min-width: 0 !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXRhci1jb250YS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6ImVkaXRhci1jb250YS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRldWRvLXBhZ2luYSwgLnRpdHVsby1wYWdpbmEge1xyXG4gIG1pbi13aWR0aDogMCAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["StatusContaEnum","TipoContaEnum","i0","EditarContaComponent","constructor","serviceConta","serviceContaVariavel","serviceCategoria","router","route","Id","Descricao","ValorInteiro","ValorCentavos","DiaVencimento","Categoria","Pagamentos","UltimoPagamento","undefined","Variavel","StatusId","Pendente","ngOnInit","id","snapshot","paramMap","get","tipo","Categorias$","listar","toLocaleString","TipoContaId","buscarPorId","subscribe","contaDto","Conta","Valor","forEach","pagamentoDto","pagamento","DataPagamento","ContaId","push","length","sort","a","b","Date","getMonth","now","Paga","getDay","Atrasada","Fixo","respostaAPI","document","getElementById","style","display","selecionaTipoConta","tipoConta","value","salvarConta","conta","CategoriaId","atualizar","navigate","contaVariavel","cancelar","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\editar-conta\\editar-conta.component.ts","D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\editar-conta\\editar-conta.component.html"],"sourcesContent":["import { Categoria } from './../../../interfaces/categoria';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { StatusContaEnum } from 'src/app/enums/statusContaEnum';\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport { UpdateContaDto } from 'src/app/interfaces/api-dto/financas/updateContaDto';\nimport { UpdateContaVariavelDto } from 'src/app/interfaces/api-dto/financas/updateContaVariavelDto';\nimport { RespostaApi } from 'src/app/interfaces/api-dto/respostaApi';\nimport { ReadConta } from 'src/app/interfaces/financas/readConta';\nimport { PagamentoConta } from 'src/app/interfaces/financas/readPagamentoConta';\nimport { ContaVariavelService } from 'src/app/services/Financas/conta-variavel.service';\nimport { ContaService } from 'src/app/services/Financas/conta.service';\nimport { CategoriaService } from 'src/app/services/categoria.service';\n\n@Component({\n  selector: 'app-editar-conta',\n  templateUrl: './editar-conta.component.html',\n  styleUrls: ['./editar-conta.component.css']\n})\nexport class EditarContaComponent implements OnInit {\n\n  constructor(\n    private serviceConta: ContaService,\n    private serviceContaVariavel: ContaVariavelService,\n    private serviceCategoria: CategoriaService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) { }\n\n  Conta: ReadConta = {\n    Id: 0,\n    Descricao: '',\n    ValorInteiro: 0,\n    ValorCentavos: 0,\n    DiaVencimento: 0,\n    Categoria: {} as Categoria,\n    Pagamentos: [],\n    UltimoPagamento: undefined,\n    Variavel: false,\n    StatusId: StatusContaEnum.Pendente,\n  };\n\n  TipoContaId: number = 0;\n  Categorias$: Observable<RespostaApi<Categoria[]>> = {} as Observable<RespostaApi<Categoria[]>>;\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    const tipo = this.route.snapshot.paramMap.get('tipo');\n    this.Categorias$ = this.serviceCategoria.listar()\n    if (id != null) {\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Variavel;\n        this.serviceContaVariavel.buscarPorId(id!).subscribe(contaDto => {\n          this.Conta = {\n            Id: contaDto.Valor.Id,\n            Descricao: contaDto.Valor.Descricao,\n            ValorInteiro: 0,\n            ValorCentavos: 0,\n            DiaVencimento: contaDto.Valor.DiaVencimento,\n            Categoria: contaDto.Valor.Categoria,\n            Pagamentos: [],\n            UltimoPagamento: undefined,\n            Variavel: true,\n            StatusId: StatusContaEnum.Pendente,\n          };\n          contaDto.Valor.Pagamentos.forEach(pagamentoDto => {\n            let pagamento: PagamentoConta = {\n              Id: pagamentoDto.Id,\n              ValorInteiro: pagamentoDto.ValorInteiro,\n              ValorCentavos: pagamentoDto.ValorCentavos,\n              DataPagamento: pagamentoDto.DataPagamento,\n              ContaId: pagamentoDto.ContaId\n            }\n            this.Conta.Pagamentos.push(pagamento);\n          });\n          if (this.Conta.Pagamentos.length > 0) {\n            this.Conta.UltimoPagamento = this.Conta.Pagamentos.sort((a, b) => b.Id - a.Id)[0].DataPagamento;\n            let UltimoPagamento = new Date(this.Conta.UltimoPagamento != undefined ? this.Conta.UltimoPagamento : 0);\n            if (UltimoPagamento.getMonth() == new Date(Date.now()).getMonth()) {\n              this.Conta.StatusId = StatusContaEnum.Paga;\n            }\n            else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth()\n              && this.Conta.DiaVencimento < new Date(Date.now()).getDay()) {\n                this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n            else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() -1) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n          }\n        });\n      }\n      else if (tipo == TipoContaEnum.Fixo.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Fixo;\n        this.serviceConta.buscarPorId(id!).subscribe(respostaAPI => {\n          this.Conta = {\n            Id: respostaAPI.Valor.Id,\n            Descricao: respostaAPI.Valor.Descricao,\n            ValorInteiro: respostaAPI.Valor.ValorInteiro,\n            ValorCentavos: respostaAPI.Valor.ValorCentavos,\n            DiaVencimento: respostaAPI.Valor.DiaVencimento,\n            Categoria: respostaAPI.Valor.Categoria,\n            Pagamentos: [],\n            UltimoPagamento: undefined,\n            Variavel: false,\n            StatusId: StatusContaEnum.Pendente,\n          };\n          respostaAPI.Valor.Pagamentos.forEach(pagamentoDto => {\n            let pagamento: PagamentoConta = {\n              Id: pagamentoDto.Id,\n              ValorInteiro: 0,\n              ValorCentavos: 0,\n              DataPagamento: pagamentoDto.DataPagamento,\n              ContaId: pagamentoDto.ContaId\n            }\n            this.Conta.Pagamentos.push(pagamento);\n          });\n          if (this.Conta.Pagamentos.length > 0) {\n            this.Conta.UltimoPagamento = this.Conta.Pagamentos.sort((a, b) => b.Id - a.Id)[0].DataPagamento;\n            let UltimoPagamento = new Date(this.Conta.UltimoPagamento != undefined ? this.Conta.UltimoPagamento : 0);\n            if (UltimoPagamento.getMonth() == new Date(Date.now()).getMonth()) {\n              this.Conta.StatusId = StatusContaEnum.Paga;\n            }\n            else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth()\n              && this.Conta.DiaVencimento < new Date(Date.now()).getDay()) {\n                this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n            else if (UltimoPagamento.getMonth() < new Date(Date.now()).getMonth() -1) {\n              this.Conta.StatusId = StatusContaEnum.Atrasada;\n            }\n          }\n        });\n      }\n    }\n    if (this.TipoContaId == TipoContaEnum.Variavel) {\n      document.getElementById(\"divValor\")!.style.display = \"none\";\n    }\n  }\n\n  selecionaTipoConta() {\n    let tipoConta = (<HTMLInputElement>document.getElementById(\"tipoConta\")).value;\n    if (tipoConta == TipoContaEnum.Fixo.toLocaleString()) {\n      document.getElementById(\"divValor\")!.style.display = \"flex\";\n    } else {\n      document.getElementById(\"divValor\")!.style.display = \"none\";\n    }\n  }\n\n  salvarConta() {\n    if (this.TipoContaId == TipoContaEnum.Fixo) {\n      let conta: UpdateContaDto = {\n        Descricao: this.Conta.Descricao,\n        ValorInteiro: this.Conta.ValorInteiro,\n        ValorCentavos: this.Conta.ValorCentavos,\n        DiaVencimento: this.Conta.DiaVencimento,\n        CategoriaId: this.Conta.Categoria.Id\n      };\n      this.serviceConta.atualizar(this.Conta.Id.toLocaleString(), conta).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n    else if (this.TipoContaId == TipoContaEnum.Variavel){\n      let contaVariavel: UpdateContaVariavelDto = {\n        Descricao: this.Conta.Descricao,\n        DiaVencimento: this.Conta.DiaVencimento,\n        CategoriaId: this.Conta.Categoria.Id\n      };\n      this.serviceContaVariavel.atualizar(this.Conta.Id.toLocaleString(), contaVariavel).subscribe(() => {\n        this.router.navigate(['/contas']);\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n}\n","<div class=\"container main ff-verdana\">\n  <div class=\"titulo-pagina ff-verdana\">\n    <h1>Inlcuir Conta</h1>\n  </div>\n  <div class=\"conteudo-pagina\">\n    <div class=\"row form-row\">\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Descrição</label>\n          <input type=\"text\" class=\"form-control\" id=\"descricao\" placeholder=\"Descrição\" [(ngModel)]=\"Conta.Descricao\">\n        </div>\n      </div>\n      <div class=\"col-2\">\n        <div class=\"form-group\">\n          <label for=\"diaVencimento\">Dia venc.:</label>\n          <input type=\"number\" class=\"form-control\" id=\"diaVencimento\" placeholder=\"Dia vencimento\" [(ngModel)]=\"Conta.DiaVencimento\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"tipoCconta\">Tipo</label>\n          <select name=\"tipoConta\" id=\"tipoConta\" class=\"form-control\" (change)=\"selecionaTipoConta()\" [(ngModel)]=\"TipoContaId\">\n            <option value=\"0\">Selecione...</option>\n            <option value=\"1\">Variável</option>\n            <option value=\"2\">Fixa</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"CategoriaId\">Categoria</label>\n          <select *ngIf=\"Categorias$ | async as categorias\" name=\"CategoriaId\" id=\"CategoriaId\" class=\"form-control\" [(ngModel)]=\"Conta.Categoria.Id\">\n            <option value=\"0\">Selecione...</option>\n            <option *ngFor=\"let categoria of categorias.Valor\" [value]=\"categoria.Id\">{{ categoria.Descricao }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"row form-row\" id=\"divValor\">\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Valor inteiro</label>\n          <input type=\"number\" class=\"form-control\" id=\"valorInteiro\" placeholder=\"Valor\" [(ngModel)]=\"Conta.ValorInteiro\">\n        </div>\n      </div>\n      <div class=\"col-3\">\n        <div class=\"form-group\">\n          <label for=\"descricao\">Valor centavos</label>\n          <input type=\"number\" class=\"form-control\" id=\"valorCentavos\" placeholder=\"Valor Centavos\" [(ngModel)]=\"Conta.ValorCentavos\">\n        </div>\n      </div>\n    </div>\n    <div class=\"row form-row\">\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <button type=\"button\" class=\"btn\" (click)=\"salvarConta()\">Salvar</button>\n          <button type=\"button\" class=\"btn btn-red\" (click)=\"cancelar()\">Cancelar</button>\n        </div>\n      </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}