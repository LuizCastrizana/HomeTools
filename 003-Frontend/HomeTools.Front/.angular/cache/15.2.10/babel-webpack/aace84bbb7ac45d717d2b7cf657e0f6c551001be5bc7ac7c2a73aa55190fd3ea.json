{"ast":null,"code":"import { TipoAlertaEnum } from 'src/app/enums/tipoAlertaEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/feedback.service\";\nexport class RespostaApiService {\n  constructor(FeedbackService) {\n    this.FeedbackService = FeedbackService;\n  }\n  tratarRespostaApi(resposta) {\n    let DadosFeedbackAlerta = {};\n    switch (resposta.status) {\n      case 200:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Sucesso,\n          Titulo: 'Sucesso!',\n          Mensagem: resposta.mensagem\n        };\n        break;\n      case 204:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Sucesso,\n          Titulo: 'Sucesso!',\n          Mensagem: ''\n        };\n        break;\n      case 400:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Atencao,\n          Titulo: 'Validação rejeitada!',\n          Mensagem: 'Erros: ' + resposta.error.erros.join(', ')\n        };\n        break;\n      case 404:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Erro,\n          Titulo: 'Erro!',\n          Mensagem: 'Recurso não encontrado.'\n        };\n        break;\n      case 500:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Erro,\n          Titulo: 'Erro!',\n          Mensagem: resposta.error.mensagem\n        };\n        break;\n      default:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Erro,\n          Titulo: 'Erro!',\n          Mensagem: 'Não foi possível completar a operação'\n        };\n        break;\n    }\n    this.FeedbackService.gerarFeedbackAlerta(DadosFeedbackAlerta);\n  }\n  static #_ = this.ɵfac = function RespostaApiService_Factory(t) {\n    return new (t || RespostaApiService)(i0.ɵɵinject(i1.FeedbackService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RespostaApiService,\n    factory: RespostaApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,cAAc,QAAQ,8BAA8B;;;AAO7D,OAAM,MAAOC,kBAAkB;EAE7BC,YACUC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EACrB;EAEJC,iBAAiB,CAACC,QAAa;IAC7B,IAAIC,mBAAmB,GAAG,EAAyB;IACnD,QAAOD,QAAQ,CAACE,MAAM;MACpB,KAAK,GAAG;QACND,mBAAmB,GAAG;UACpBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACU,OAAO;UAClCC,MAAM,EAAE,UAAU;UAClBC,QAAQ,EAAEP,QAAQ,CAACQ;SACG;QACxB;MACF,KAAK,GAAG;QACNP,mBAAmB,GAAG;UACpBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACU,OAAO;UAClCC,MAAM,EAAE,UAAU;UAClBC,QAAQ,EAAE;SACY;QACxB;MACF,KAAK,GAAG;QACNN,mBAAmB,GAAG;UACpBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACc,OAAO;UAClCH,MAAM,EAAE,sBAAsB;UAC9BC,QAAQ,EAAE,SAAS,GAAGP,QAAQ,CAACU,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI;SAC9B;QACxB;MACF,KAAK,GAAG;QACNX,mBAAmB,GAAG;UACpBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACkB,IAAI;UAC/BP,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE;SACY;QACxB;MACF,KAAK,GAAG;QACNN,mBAAmB,GAAG;UACpBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACkB,IAAI;UAC/BP,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAEP,QAAQ,CAACU,KAAK,CAACF;SAC1B;QACD;MACA;QACAP,mBAAmB,GAAG;UAClBE,EAAE,EAAE,UAAU;UACdC,UAAU,EAAET,cAAc,CAACkB,IAAI;UAC/BP,MAAM,EAAE,OAAO;UACfC,QAAQ,EAAE;SACY;QACxB;IAAM;IAEV,IAAI,CAACT,eAAe,CAACgB,mBAAmB,CAACb,mBAAmB,CAAC;EACjE;EAAC;qBA3DUL,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAmB,SAAlBnB,kBAAkB;IAAAoB,YAFjB;EAAM","names":["TipoAlertaEnum","RespostaApiService","constructor","FeedbackService","tratarRespostaApi","resposta","DadosFeedbackAlerta","status","Id","TipoAlerta","Sucesso","Titulo","Mensagem","mensagem","Atencao","error","erros","join","Erro","gerarFeedbackAlerta","factory","providedIn"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\services\\resposta-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TipoAlertaEnum } from 'src/app/enums/tipoAlertaEnum';\nimport { DadosFeedbackAlerta } from 'src/app/interfaces/dadosFeedbackAlerta';\nimport { FeedbackService } from '../services/feedback.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RespostaApiService {\n\n  constructor(\n    private FeedbackService: FeedbackService,\n  ) { }\n\n  tratarRespostaApi(resposta: any) {\n    let DadosFeedbackAlerta = {} as DadosFeedbackAlerta;\n    switch(resposta.status) {\n      case 200:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Sucesso,\n          Titulo: 'Sucesso!',\n          Mensagem: resposta.mensagem,\n        } as DadosFeedbackAlerta;\n        break;\n      case 204:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Sucesso,\n          Titulo: 'Sucesso!',\n          Mensagem: '',\n        } as DadosFeedbackAlerta;\n        break;\n      case 400:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Atencao,\n          Titulo: 'Validação rejeitada!',\n          Mensagem: 'Erros: ' + resposta.error.erros.join(', ')\n        } as DadosFeedbackAlerta;\n        break;\n      case 404:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Erro,\n          Titulo: 'Erro!',\n          Mensagem: 'Recurso não encontrado.',\n        } as DadosFeedbackAlerta;\n        break;\n      case 500:\n        DadosFeedbackAlerta = {\n          Id: 'feedback',\n          TipoAlerta: TipoAlertaEnum.Erro,\n          Titulo: 'Erro!',\n          Mensagem: resposta.error.mensagem,\n        };\n        break;\n        default:\n        DadosFeedbackAlerta = {\n            Id: 'feedback',\n            TipoAlerta: TipoAlertaEnum.Erro,\n            Titulo: 'Erro!',\n            Mensagem: 'Não foi possível completar a operação',\n          } as DadosFeedbackAlerta;\n          break;\n      }\n      this.FeedbackService.gerarFeedbackAlerta(DadosFeedbackAlerta);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}