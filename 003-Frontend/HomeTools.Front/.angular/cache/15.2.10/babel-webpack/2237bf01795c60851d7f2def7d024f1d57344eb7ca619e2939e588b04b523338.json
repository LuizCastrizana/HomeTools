{"ast":null,"code":"import { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Financas/conta.service\";\nimport * as i2 from \"src/app/services/Financas/conta-variavel.service\";\nimport * as i3 from \"src/app/services/categoria.service\";\nimport * as i4 from \"src/app/services/validacao.service\";\nimport * as i5 from \"src/app/services/resposta-api.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nfunction IncluirContaComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const categoria_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", categoria_r1.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r1.Descricao);\n  }\n}\nexport class IncluirContaComponent {\n  constructor(contaService, contaVariavelService, categoriaService, validacaoService, respostaApiService, router) {\n    this.contaService = contaService;\n    this.contaVariavelService = contaVariavelService;\n    this.categoriaService = categoriaService;\n    this.validacaoService = validacaoService;\n    this.respostaApiService = respostaApiService;\n    this.router = router;\n    this.Conta = {};\n    this.TipoContaId = 0;\n    this.Categorias = {};\n  }\n  ngOnInit() {\n    this.Conta.CategoriaId = 0;\n    this.categoriaService.listar().subscribe({\n      next: result => {\n        this.Categorias = result.valor;\n      },\n      error: err => {\n        this.respostaApiService.tratarRespostaApi(err);\n        this.router.navigate(['/contas']);\n      }\n    });\n  }\n  selecionaTipoConta() {\n    let tipoConta = document.getElementById('selTipoContaId').value;\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\n      document.getElementById('divValor').style.display = 'flex';\n    } else {\n      document.getElementById('divValor').style.display = 'none';\n    }\n  }\n  salvarConta() {\n    if (!this.validarCamposObrigatorios(this.TipoContaId == TipoContaEnum.Variavel)) {\n      return;\n    }\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\n      this.contaService.incluir(this.Conta).subscribe({\n        next: result => {\n          this.respostaApiService.tratarRespostaApi(result);\n          this.router.navigate(['/contas']);\n        },\n        error: err => {\n          this.respostaApiService.tratarRespostaApi(err);\n        }\n      });\n    } else if (this.TipoContaId == TipoContaEnum.Variavel) {\n      let contaVariavel = {\n        Descricao: this.Conta.Descricao,\n        DiaVencimento: this.Conta.DiaVencimento,\n        CategoriaId: this.Conta.CategoriaId\n      };\n      this.contaVariavelService.incluir(contaVariavel).subscribe({\n        next: result => {\n          this.respostaApiService.tratarRespostaApi(result);\n          this.router.navigate(['/contas']);\n        },\n        error: err => {\n          this.respostaApiService.tratarRespostaApi(err);\n        }\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n  //#region Validações\n  validarCamposObrigatorios(variavel) {\n    let erros = 0;\n    let camposObrigatorios = ['txtDescricao', 'txtDiaVencimento', 'selCategoriaId', 'selTipoContaId'];\n    if (!variavel) {\n      camposObrigatorios.push('txtValorInteiro');\n      camposObrigatorios.push('txtValorCentavos');\n    }\n    camposObrigatorios.forEach(campo => {\n      if (!this.campoObrigatorio(campo)) {\n        erros++;\n      }\n    });\n    return erros == 0 ? true : false;\n  }\n  campoObrigatorio(campoId) {\n    let campo = document.getElementById(campoId);\n    let campoErro = document.getElementById('erro_' + campoId);\n    if (campo.value === \"\" || campo.value == null || campo.value == undefined || campo.tagName == 'SELECT' && campo.value == '0') {\n      campo.classList.add('campo-obrigatorio');\n      campoErro.style.display = 'block';\n      campoErro.innerHTML = \"Campo obrigatório\";\n      return false;\n    } else {\n      campoErro.style.display = 'none';\n      campo.classList.remove('campo-obrigatorio');\n      return true;\n    }\n  }\n  apenasNumeros(event) {\n    if (!this.validacaoService.apenasNumeros(event)) {\n      event.preventDefault();\n    }\n  }\n  static #_ = this.ɵfac = function IncluirContaComponent_Factory(t) {\n    return new (t || IncluirContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ContaVariavelService), i0.ɵɵdirectiveInject(i3.CategoriaService), i0.ɵɵdirectiveInject(i4.ValidacaoService), i0.ɵɵdirectiveInject(i5.RespostaApiService), i0.ɵɵdirectiveInject(i6.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncluirContaComponent,\n    selectors: [[\"app-incluir-conta\"]],\n    decls: 59,\n    vars: 7,\n    consts: [[1, \"container\", \"main\", \"ff-verdana\"], [1, \"titulo-pagina\", \"ff-verdana\"], [1, \"form\", \"conteudo-pagina\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col-4\"], [1, \"form-group\"], [\"for\", \"txtDescricao\"], [\"type\", \"text\", \"id\", \"txtDescricao\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", \"name\", \"Descricao\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"ngModelChange\"], [\"id\", \"erro_txtDescricao\", 1, \"form-validation\"], [1, \"col-2\"], [\"for\", \"txtDiaVencimento\"], [\"type\", \"text\", \"id\", \"txtDiaVencimento\", \"placeholder\", \"Dia vencimento\", \"name\", \"DiaVencimento\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtDiaVencimento\", 1, \"form-validation\"], [1, \"col-3\"], [\"for\", \"selTipoContaId\"], [\"name\", \"tipoConta\", \"id\", \"selTipoContaId\", \"name\", \"TipoContaId\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"focusout\", \"ngModelChange\"], [\"value\", \"0\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"id\", \"erro_selTipoContaId\", 1, \"form-validation\"], [\"for\", \"selCategoriaId\"], [\"name\", \"CategoriaId\", \"id\", \"selCategoriaId\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"erro_selCategoriaId\", 1, \"form-validation\"], [\"id\", \"divValor\", 1, \"row\"], [\"for\", \"txtValorInteiro\"], [\"type\", \"text\", \"id\", \"txtValorInteiro\", \"placeholder\", \"Valor\", \"name\", \"ValorInteiro\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtValorInteiro\", 1, \"form-validation\"], [\"for\", \"txtValorCentavos\"], [\"type\", \"text\", \"id\", \"txtValorCentavos\", \"placeholder\", \"Valor Centavos\", \"name\", \"ValorCentavos\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtValorCentavos\", 1, \"form-validation\"], [1, \"col-12\"], [\"type\", \"submit\", \"id\", \"btnSumbit\", \"title\", \"Salvar\", 1, \"btn\"], [\"type\", \"button\", \"id\", \"btnCancelar\", \"title\", \"Cancelar\", 1, \"btn\", \"btn-red\", 3, \"click\"], [3, \"value\"]],\n    template: function IncluirContaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Incluir Conta\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function IncluirContaComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.salvarConta();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"focusout\", function IncluirContaComponent_Template_input_focusout_10_listener() {\n          return ctx.campoObrigatorio(\"txtDescricao\");\n        })(\"ngModelChange\", function IncluirContaComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.Conta.Descricao = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"label\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 5)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Dia venc.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11);\n        i0.ɵɵlistener(\"focusout\", function IncluirContaComponent_Template_input_focusout_16_listener() {\n          return ctx.campoObrigatorio(\"txtDiaVencimento\");\n        })(\"keypress\", function IncluirContaComponent_Template_input_keypress_16_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function IncluirContaComponent_Template_input_paste_16_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function IncluirContaComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.Conta.DiaVencimento = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"label\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 5)(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Tipo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 15);\n        i0.ɵɵlistener(\"change\", function IncluirContaComponent_Template_select_change_22_listener() {\n          return ctx.selecionaTipoConta();\n        })(\"focusout\", function IncluirContaComponent_Template_select_focusout_22_listener() {\n          return ctx.campoObrigatorio(\"selTipoContaId\");\n        })(\"ngModelChange\", function IncluirContaComponent_Template_select_ngModelChange_22_listener($event) {\n          return ctx.TipoContaId = $event;\n        });\n        i0.ɵɵelementStart(23, \"option\", 16);\n        i0.ɵɵtext(24, \"Selecione...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\", 17);\n        i0.ɵɵtext(26, \"Vari\\u00E1vel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 18);\n        i0.ɵɵtext(28, \"Fixa\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(29, \"label\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 13)(31, \"div\", 5)(32, \"label\", 20);\n        i0.ɵɵtext(33, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"select\", 21);\n        i0.ɵɵlistener(\"focusout\", function IncluirContaComponent_Template_select_focusout_34_listener() {\n          return ctx.campoObrigatorio(\"selCategoriaId\");\n        })(\"ngModelChange\", function IncluirContaComponent_Template_select_ngModelChange_34_listener($event) {\n          return ctx.Conta.CategoriaId = $event;\n        });\n        i0.ɵɵelementStart(35, \"option\", 16);\n        i0.ɵɵtext(36, \"Selecione...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, IncluirContaComponent_option_37_Template, 2, 2, \"option\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"label\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(39, \"div\", 24)(40, \"div\", 13)(41, \"div\", 5)(42, \"label\", 25);\n        i0.ɵɵtext(43, \"Valor inteiro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"input\", 26);\n        i0.ɵɵlistener(\"focusout\", function IncluirContaComponent_Template_input_focusout_44_listener() {\n          return ctx.campoObrigatorio(\"txtValorInteiro\");\n        })(\"keypress\", function IncluirContaComponent_Template_input_keypress_44_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function IncluirContaComponent_Template_input_paste_44_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function IncluirContaComponent_Template_input_ngModelChange_44_listener($event) {\n          return ctx.Conta.ValorInteiro = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"label\", 27);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 13)(47, \"div\", 5)(48, \"label\", 28);\n        i0.ɵɵtext(49, \"Valor centavos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"input\", 29);\n        i0.ɵɵlistener(\"focusout\", function IncluirContaComponent_Template_input_focusout_50_listener() {\n          return ctx.campoObrigatorio(\"txtValorCentavos\");\n        })(\"keypress\", function IncluirContaComponent_Template_input_keypress_50_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function IncluirContaComponent_Template_input_paste_50_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function IncluirContaComponent_Template_input_ngModelChange_50_listener($event) {\n          return ctx.Conta.ValorCentavos = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"label\", 30);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"div\", 3)(53, \"div\", 31)(54, \"div\", 5)(55, \"button\", 32);\n        i0.ɵɵtext(56, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"button\", 33);\n        i0.ɵɵlistener(\"click\", function IncluirContaComponent_Template_button_click_57_listener() {\n          return ctx.cancelar();\n        });\n        i0.ɵɵtext(58, \"Cancelar\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.Descricao);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.DiaVencimento);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.TipoContaId);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.CategoriaId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Categorias);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorInteiro);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorCentavos);\n      }\n    },\n    dependencies: [i7.NgForOf, i8.ɵNgNoValidate, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm],\n    styles: [\"#divValor[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9maW5hbmNhcy9jb250YXMvaW5jbHVpci1jb250YS9pbmNsdWlyLWNvbnRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIjZGl2VmFsb3Ige1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["TipoContaEnum","i0","IncluirContaComponent","constructor","contaService","contaVariavelService","categoriaService","validacaoService","respostaApiService","router","ngOnInit","Conta","CategoriaId","listar","subscribe","next","result","Categorias","valor","error","err","tratarRespostaApi","navigate","selecionaTipoConta","tipoConta","document","getElementById","value","Fixa","toLocaleString","style","display","salvarConta","validarCamposObrigatorios","TipoContaId","Variavel","incluir","contaVariavel","Descricao","DiaVencimento","cancelar","variavel","erros","camposObrigatorios","push","forEach","campo","campoObrigatorio","campoId","campoErro","undefined","tagName","classList","add","innerHTML","remove","apenasNumeros","event","preventDefault","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\incluir-conta\\incluir-conta.component.ts","D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\incluir-conta\\incluir-conta.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\r\nimport { CreateContaDto } from 'src/app/dto/financas/contas/createContaDto';\r\nimport { CreateContaVariavelDto } from 'src/app/dto/financas/contas/createContaVariavelDto';\r\nimport { ContaVariavelService } from 'src/app/services/Financas/conta-variavel.service';\r\nimport { ContaService } from 'src/app/services/Financas/conta.service';\r\nimport { CategoriaService } from 'src/app/services/categoria.service';\r\nimport { ValidacaoService } from 'src/app/services/validacao.service';\r\nimport { RespostaApi } from 'src/app/dto/respostaApi';\r\nimport { Categoria } from 'src/app/interfaces/categoria';\r\nimport { RespostaApiService } from 'src/app/services/resposta-api.service';\r\n\r\n@Component({\r\n  selector: 'app-incluir-conta',\r\n  templateUrl: './incluir-conta.component.html',\r\n  styleUrls: ['./incluir-conta.component.css'],\r\n})\r\nexport class IncluirContaComponent implements OnInit {\r\n  Conta: CreateContaDto = {} as CreateContaDto;\r\n\r\n  TipoContaId: number = 0;\r\n  Categorias: Categoria[] = {} as Categoria[];\r\n\r\n  constructor(\r\n    private contaService: ContaService,\r\n    private contaVariavelService: ContaVariavelService,\r\n    private categoriaService: CategoriaService,\r\n    private validacaoService: ValidacaoService,\r\n    private respostaApiService: RespostaApiService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.Conta.CategoriaId = 0;\r\n    this.categoriaService.listar().subscribe({\r\n      next: (result) => {\r\n        this.Categorias = result.valor;\r\n      },\r\n      error: (err) => {\r\n        this.respostaApiService.tratarRespostaApi(err);\r\n        this.router.navigate(['/contas']);\r\n      }\r\n    });\r\n  }\r\n\r\n  selecionaTipoConta() {\r\n    let tipoConta = (<HTMLInputElement>document.getElementById('selTipoContaId'))\r\n      .value;\r\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\r\n      document.getElementById('divValor')!.style.display = 'flex';\r\n    } else {\r\n      document.getElementById('divValor')!.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  salvarConta() {\r\n    if (!this.validarCamposObrigatorios(this.TipoContaId == TipoContaEnum.Variavel)) {\r\n      return;\r\n    }\r\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\r\n      this.contaService.incluir(this.Conta).subscribe({\r\n        next: (result) => {\r\n          this.respostaApiService.tratarRespostaApi(result);\r\n          this.router.navigate(['/contas']);\r\n        },\r\n        error: (err) => {\r\n          this.respostaApiService.tratarRespostaApi(err);\r\n        }\r\n      });\r\n    } else if (this.TipoContaId == TipoContaEnum.Variavel) {\r\n      let contaVariavel: CreateContaVariavelDto = {\r\n        Descricao: this.Conta.Descricao,\r\n        DiaVencimento: this.Conta.DiaVencimento,\r\n        CategoriaId: this.Conta.CategoriaId,\r\n      };\r\n      this.contaVariavelService.incluir(contaVariavel).subscribe({\r\n        next: (result) => {\r\n          this.respostaApiService.tratarRespostaApi(result);\r\n          this.router.navigate(['/contas']);\r\n        },\r\n        error: (err) => {\r\n          this.respostaApiService.tratarRespostaApi(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelar() {\r\n    this.router.navigate(['/contas']);\r\n  }\r\n\r\n  //#region Validações\r\n\r\n  validarCamposObrigatorios(variavel: boolean): boolean {\r\n    let erros: number = 0;\r\n    let camposObrigatorios = ['txtDescricao', 'txtDiaVencimento', 'selCategoriaId', 'selTipoContaId'];\r\n    if (!variavel) {\r\n      camposObrigatorios.push('txtValorInteiro');\r\n      camposObrigatorios.push('txtValorCentavos');\r\n    }\r\n    camposObrigatorios.forEach(campo => {\r\n      if (!this.campoObrigatorio(campo)) {\r\n        erros++;\r\n      }\r\n    });\r\n    return erros == 0 ? true : false;\r\n  }\r\n\r\n  campoObrigatorio(campoId: string): boolean {\r\n    let campo = <HTMLInputElement>document.getElementById(campoId)!;\r\n    let campoErro = document.getElementById('erro_' + campoId)!;\r\n    if (campo.value === \"\" || campo.value == null || campo.value == undefined || (campo.tagName == 'SELECT' && campo.value == '0')) {\r\n      campo.classList.add('campo-obrigatorio');\r\n      campoErro.style.display = 'block';\r\n      campoErro.innerHTML = \"Campo obrigatório\";\r\n      return false;\r\n    }\r\n    else {\r\n      campoErro.style.display = 'none';\r\n      campo.classList.remove('campo-obrigatorio');\r\n      return true;\r\n    }\r\n  }\r\n\r\n  apenasNumeros(event: any) {\r\n    if (!this.validacaoService.apenasNumeros(event)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","<div class=\"container main ff-verdana\">\r\n  <div class=\"titulo-pagina ff-verdana\">\r\n    <h1>Incluir Conta</h1>\r\n  </div>\r\n  <form (ngSubmit)=\"salvarConta()\" class=\"form conteudo-pagina\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtDescricao\">Descrição</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtDescricao\" placeholder=\"Descrição\" name=\"Descricao\"\r\n          (focusout)=\"campoObrigatorio('txtDescricao')\" [(ngModel)]=\"Conta.Descricao\">\r\n          <label class=\"form-validation\" id=\"erro_txtDescricao\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtDiaVencimento\">Dia venc.</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtDiaVencimento\" placeholder=\"Dia vencimento\" name=\"DiaVencimento\"\r\n          (focusout)=\"campoObrigatorio('txtDiaVencimento')\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.DiaVencimento\">\r\n          <label class=\"form-validation\" id=\"erro_txtDiaVencimento\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"selTipoContaId\">Tipo</label>\r\n          <select name=\"tipoConta\" id=\"selTipoContaId\" class=\"form-control\" name=\"TipoContaId\"\r\n          (change)=\"selecionaTipoConta()\" (focusout)=\"campoObrigatorio('selTipoContaId')\" [(ngModel)]=\"TipoContaId\">\r\n            <option value=\"0\">Selecione...</option>\r\n            <option value=\"1\">Variável</option>\r\n            <option value=\"2\">Fixa</option>\r\n          </select>\r\n          <label class=\"form-validation\" id=\"erro_selTipoContaId\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"selCategoriaId\">Categoria</label>\r\n          <select name=\"CategoriaId\" id=\"selCategoriaId\" class=\"form-control\" (focusout)=\"campoObrigatorio('selCategoriaId')\" [(ngModel)]=\"Conta.CategoriaId\">\r\n            <option value=\"0\">Selecione...</option>\r\n            <option *ngFor=\"let categoria of Categorias\" [value]=\"categoria.Id\">{{ categoria.Descricao }}</option>\r\n          </select>\r\n          <label class=\"form-validation\" id=\"erro_selCategoriaId\"></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\" id=\"divValor\">\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtValorInteiro\">Valor inteiro</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtValorInteiro\" placeholder=\"Valor\" name=\"ValorInteiro\"\r\n          (focusout)=\"campoObrigatorio('txtValorInteiro')\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorInteiro\">\r\n          <label class=\"form-validation\" id=\"erro_txtValorInteiro\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtValorCentavos\">Valor centavos</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtValorCentavos\" placeholder=\"Valor Centavos\" name=\"ValorCentavos\"\r\n          (focusout)=\"campoObrigatorio('txtValorCentavos')\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorCentavos\">\r\n          <label class=\"form-validation\" id=\"erro_txtValorCentavos\"></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" id=\"btnSumbit\" title=\"Salvar\" class=\"btn\">Salvar</button>\r\n          <button type=\"button\" id=\"btnCancelar\" title=\"Cancelar\" class=\"btn btn-red\" (click)=\"cancelar()\">Cancelar</button>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}