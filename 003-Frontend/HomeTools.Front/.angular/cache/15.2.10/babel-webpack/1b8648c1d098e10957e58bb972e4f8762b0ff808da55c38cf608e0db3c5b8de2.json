{"ast":null,"code":"import { StatusContaEnum } from 'src/app/enums/statusContaEnum';\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\nimport { ContaMapper } from 'src/app/mappers/financas/ContaMapper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Financas/conta.service\";\nimport * as i2 from \"src/app/services/Financas/conta-variavel.service\";\nimport * as i3 from \"src/app/services/categoria.service\";\nimport * as i4 from \"src/app/services/validacao.service\";\nimport * as i5 from \"src/app/services/resposta-api.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nfunction EditarContaComponent_input_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 32);\n  }\n}\nfunction EditarContaComponent_input_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 33);\n  }\n}\nfunction EditarContaComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const categoria_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", categoria_r3.Id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(categoria_r3.Descricao);\n  }\n}\nexport class EditarContaComponent {\n  constructor(contaService, contaVariavelService, categoriaService, validacaoService, respostaApiService, router, route) {\n    this.contaService = contaService;\n    this.contaVariavelService = contaVariavelService;\n    this.categoriaService = categoriaService;\n    this.validacaoService = validacaoService;\n    this.respostaApiService = respostaApiService;\n    this.router = router;\n    this.route = route;\n    this.Conta = {\n      Id: 0,\n      Descricao: '',\n      ValorInteiro: 0,\n      ValorCentavos: 0,\n      DiaVencimento: 0,\n      Categoria: {},\n      Pagamentos: [],\n      UltimoPagamento: undefined,\n      Variavel: false,\n      StatusId: StatusContaEnum.Pendente\n    };\n    this.TipoContaId = 0;\n    this.Categorias = {};\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    const tipo = this.route.snapshot.paramMap.get('tipo');\n    this.categoriaService.listar().subscribe({\n      next: result => {\n        this.Categorias = result;\n      },\n      error: err => {\n        this.respostaApiService.tratarRespostaApi(err);\n        this.router.navigate(['/contas']);\n      }\n    });\n    if (id != null) {\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Variavel;\n        this.contaVariavelService.buscarPorId(id).subscribe({\n          next: contaDto => {\n            this.Conta = ContaMapper.ContaVariavelDtoToConta(contaDto.valor);\n          },\n          error: err => {\n            this.respostaApiService.tratarRespostaApi(err);\n            this.router.navigate(['/contas']);\n          }\n        });\n      } else if (tipo == TipoContaEnum.Fixa.toLocaleString()) {\n        this.TipoContaId = TipoContaEnum.Fixa;\n        this.contaService.buscarPorId(id).subscribe({\n          next: contaDto => {\n            this.Conta = ContaMapper.ContaDtoToConta(contaDto.valor);\n          },\n          error: err => {\n            this.respostaApiService.tratarRespostaApi(err);\n            this.router.navigate(['/contas']);\n          }\n        });\n      }\n      if (this.TipoContaId == TipoContaEnum.Variavel) {\n        document.getElementById(\"divValor\").style.display = \"none\";\n      }\n    } else {\n      this.router.navigate(['/contas']);\n    }\n  }\n  selecionaTipoConta() {\n    let tipoConta = document.getElementById(\"tipoConta\").value;\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\n      document.getElementById(\"divValor\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"divValor\").style.display = \"none\";\n    }\n  }\n  salvarConta() {\n    if (!this.validarCamposObrigatorios(this.Conta.Variavel)) {\n      return;\n    }\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\n      this.contaService.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaDto(this.Conta)).subscribe({\n        next: result => {\n          this.respostaApiService.tratarRespostaApi(result);\n          this.router.navigate(['/contas']);\n        },\n        error: err => {\n          this.respostaApiService.tratarRespostaApi(err);\n        }\n      });\n    } else if (this.TipoContaId == TipoContaEnum.Variavel) {\n      this.contaVariavelService.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaVariavelDto(this.Conta)).subscribe({\n        next: result => {\n          this.respostaApiService.tratarRespostaApi(result);\n          this.router.navigate(['/contas']);\n        },\n        error: err => {\n          this.respostaApiService.tratarRespostaApi(err);\n        }\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/contas']);\n  }\n  validarCamposObrigatorios(variavel) {\n    let erros = 0;\n    let camposObrigatorios = ['txtDescricao', 'txtDiaVencimento', 'selCategoriaId'];\n    if (variavel) {\n      camposObrigatorios.push('txtValorInteiro');\n      camposObrigatorios.push('txtValorCentavos');\n    }\n    camposObrigatorios.forEach(campo => {\n      if (!this.campoObrigatorio(campo)) {\n        erros++;\n      }\n    });\n    return erros == 0 ? true : false;\n  }\n  campoObrigatorio(campoId) {\n    let campo = document.getElementById(campoId);\n    let campoErro = document.getElementById('erro_' + campoId);\n    if (campo.value === \"\" || campo.value == null || campo.value == undefined) {\n      campo.classList.add('campo-obrigatorio');\n      campoErro.style.display = 'block';\n      campoErro.innerHTML = \"Campo obrigatório\";\n      return false;\n    } else {\n      campoErro.style.display = 'none';\n      campo.classList.remove('campo-obrigatorio');\n      return true;\n    }\n  }\n  apenasNumeros(event) {\n    if (!this.validacaoService.apenasNumeros(event)) {\n      event.preventDefault();\n    }\n  }\n  static #_ = this.ɵfac = function EditarContaComponent_Factory(t) {\n    return new (t || EditarContaComponent)(i0.ɵɵdirectiveInject(i1.ContaService), i0.ɵɵdirectiveInject(i2.ContaVariavelService), i0.ɵɵdirectiveInject(i3.CategoriaService), i0.ɵɵdirectiveInject(i4.ValidacaoService), i0.ɵɵdirectiveInject(i5.RespostaApiService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i6.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarContaComponent,\n    selectors: [[\"app-editar-conta\"]],\n    decls: 53,\n    vars: 8,\n    consts: [[1, \"container\", \"main\", \"ff-verdana\"], [1, \"titulo-pagina\", \"ff-verdana\"], [1, \"form\", \"conteudo-pagina\", 3, \"ngSubmit\"], [1, \"row\"], [1, \"col-4\"], [1, \"form-group\"], [\"for\", \"txtDescricao\"], [\"type\", \"text\", \"id\", \"txtDescricao\", \"placeholder\", \"Descri\\u00E7\\u00E3o\", \"name\", \"Descricao\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"ngModelChange\"], [\"id\", \"erro_txtDescricao\", 1, \"form-validation\"], [1, \"col-2\"], [\"for\", \"txtDiaVencimento\"], [\"type\", \"text\", \"id\", \"txtDiaVencimento\", \"placeholder\", \"Dia vencimento\", \"name\", \"DiaVencimento\", 1, \"form-control\", 3, \"ngModel\", \"keypress\", \"paste\", \"focusout\", \"ngModelChange\"], [\"id\", \"erro_txtDiaVencimento\", 1, \"form-validation\"], [1, \"col-3\"], [\"for\", \"txtTipoContaId\"], [\"type\", \"text\", \"class\", \"form-control\", \"value\", \"Vari\\u00E1vel\", \"readonly\", \"\", \"id\", \"txtTipoContaId\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", \"value\", \"Fixa\", \"readonly\", \"\", 4, \"ngIf\"], [\"for\", \"selCategoriaId\"], [\"id\", \"selCategoriaId\", \"name\", \"CategoriaId\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"erro_selCategoriaId\", 1, \"form-validation\"], [\"id\", \"divValor\", 1, \"row\"], [\"for\", \"txtValorInteiro\"], [\"type\", \"text\", \"id\", \"txtValorInteiro\", \"placeholder\", \"Valor\", \"name\", \"ValorInteiro\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtValorInteiro\", 1, \"form-validation\"], [\"for\", \"txtValorCentavos\"], [\"type\", \"text\", \"id\", \"txtValorCentavos\", \"placeholder\", \"Valor Centavos\", \"name\", \"ValorCentavos\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtValorCentavos\", 1, \"form-validation\"], [1, \"col-12\"], [\"type\", \"submit\", \"id\", \"btnSubmit\", \"title\", \"Salvar\", 1, \"btn\"], [\"type\", \"button\", \"id\", \"btnCancelar\", \"title\", \"Cancelar\", 1, \"btn\", \"btn-red\", 3, \"click\"], [\"type\", \"text\", \"value\", \"Vari\\u00E1vel\", \"readonly\", \"\", \"id\", \"txtTipoContaId\", 1, \"form-control\"], [\"type\", \"text\", \"value\", \"Fixa\", \"readonly\", \"\", 1, \"form-control\"], [3, \"value\"]],\n    template: function EditarContaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Editar Conta\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditarContaComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.salvarConta();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"focusout\", function EditarContaComponent_Template_input_focusout_10_listener() {\n          return ctx.campoObrigatorio(\"txtDescricao\");\n        })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.Conta.Descricao = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"label\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 5)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Dia venc.:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11);\n        i0.ɵɵlistener(\"keypress\", function EditarContaComponent_Template_input_keypress_16_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function EditarContaComponent_Template_input_paste_16_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"focusout\", function EditarContaComponent_Template_input_focusout_16_listener() {\n          return ctx.campoObrigatorio(\"txtDiaVencimento\");\n        })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.Conta.DiaVencimento = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"label\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 5)(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Tipo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, EditarContaComponent_input_22_Template, 1, 0, \"input\", 15);\n        i0.ɵɵtemplate(23, EditarContaComponent_input_23_Template, 1, 0, \"input\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 13)(25, \"div\", 5)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"select\", 18);\n        i0.ɵɵlistener(\"focusout\", function EditarContaComponent_Template_select_focusout_28_listener() {\n          return ctx.campoObrigatorio(\"selCategoriaId\");\n        })(\"ngModelChange\", function EditarContaComponent_Template_select_ngModelChange_28_listener($event) {\n          return ctx.Conta.Categoria.Id = $event;\n        });\n        i0.ɵɵelementStart(29, \"option\", 19);\n        i0.ɵɵtext(30, \"Selecione...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, EditarContaComponent_option_31_Template, 2, 2, \"option\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"label\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 22)(34, \"div\", 13)(35, \"div\", 5)(36, \"label\", 23);\n        i0.ɵɵtext(37, \"Valor inteiro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 24);\n        i0.ɵɵlistener(\"focusout\", function EditarContaComponent_Template_input_focusout_38_listener() {\n          return ctx.campoObrigatorio(\"txtValorInteiro\");\n        })(\"keypress\", function EditarContaComponent_Template_input_keypress_38_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function EditarContaComponent_Template_input_paste_38_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.Conta.ValorInteiro = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"label\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 13)(41, \"div\", 5)(42, \"label\", 26);\n        i0.ɵɵtext(43, \"Valor centavos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"input\", 27);\n        i0.ɵɵlistener(\"focusout\", function EditarContaComponent_Template_input_focusout_44_listener() {\n          return ctx.campoObrigatorio(\"txtValorCentavos\");\n        })(\"keypress\", function EditarContaComponent_Template_input_keypress_44_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function EditarContaComponent_Template_input_paste_44_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function EditarContaComponent_Template_input_ngModelChange_44_listener($event) {\n          return ctx.Conta.ValorCentavos = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"label\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\", 3)(47, \"div\", 29)(48, \"div\", 5)(49, \"button\", 30);\n        i0.ɵɵtext(50, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function EditarContaComponent_Template_button_click_51_listener() {\n          return ctx.cancelar();\n        });\n        i0.ɵɵtext(52, \"Cancelar\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.Descricao);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.DiaVencimento);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.Conta.Variavel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.Conta.Variavel);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.Categoria.Id);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Categorias.valor);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorInteiro);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.ValorCentavos);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i8.ɵNgNoValidate, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm],\n    styles: [\".conteudo-pagina[_ngcontent-%COMP%], .titulo-pagina[_ngcontent-%COMP%] {\\r\\n  min-width: 0 !important;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9maW5hbmNhcy9jb250YXMvZWRpdGFyLWNvbnRhL2VkaXRhci1jb250YS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRldWRvLXBhZ2luYSwgLnRpdHVsby1wYWdpbmEge1xyXG4gIG1pbi13aWR0aDogMCAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["StatusContaEnum","TipoContaEnum","ContaMapper","i0","EditarContaComponent","constructor","contaService","contaVariavelService","categoriaService","validacaoService","respostaApiService","router","route","Id","Descricao","ValorInteiro","ValorCentavos","DiaVencimento","Categoria","Pagamentos","UltimoPagamento","undefined","Variavel","StatusId","Pendente","ngOnInit","id","snapshot","paramMap","get","tipo","listar","subscribe","next","result","Categorias","error","err","tratarRespostaApi","navigate","toLocaleString","TipoContaId","buscarPorId","contaDto","Conta","ContaVariavelDtoToConta","valor","Fixa","ContaDtoToConta","document","getElementById","style","display","selecionaTipoConta","tipoConta","value","salvarConta","validarCamposObrigatorios","atualizar","ContaToUpdateContaDto","ContaToUpdateContaVariavelDto","cancelar","variavel","erros","camposObrigatorios","push","forEach","campo","campoObrigatorio","campoId","campoErro","classList","add","innerHTML","remove","apenasNumeros","event","preventDefault","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\editar-conta\\editar-conta.component.ts","D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\editar-conta\\editar-conta.component.html"],"sourcesContent":["import { Categoria } from '../../../../interfaces/categoria';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StatusContaEnum } from 'src/app/enums/statusContaEnum';\r\nimport { TipoContaEnum } from 'src/app/enums/tipoContaEnum';\r\nimport { RespostaApi } from 'src/app/dto/respostaApi';\r\nimport { Conta } from 'src/app/interfaces/financas/Conta';\r\nimport { ContaMapper } from 'src/app/mappers/financas/ContaMapper';\r\nimport { ContaVariavelService } from 'src/app/services/Financas/conta-variavel.service';\r\nimport { ContaService } from 'src/app/services/Financas/conta.service';\r\nimport { CategoriaService } from 'src/app/services/categoria.service';\r\nimport { ValidacaoService } from 'src/app/services/validacao.service';\r\nimport { FeedbackService } from '../../../../services/feedback.service';\r\nimport { RespostaApiService } from 'src/app/services/resposta-api.service';\r\n\r\n@Component({\r\n  selector: 'app-editar-conta',\r\n  templateUrl: './editar-conta.component.html',\r\n  styleUrls: ['./editar-conta.component.css']\r\n})\r\nexport class EditarContaComponent implements OnInit {\r\n\r\n  Conta: Conta = {\r\n    Id: 0,\r\n    Descricao: '',\r\n    ValorInteiro: 0,\r\n    ValorCentavos: 0,\r\n    DiaVencimento: 0,\r\n    Categoria: {} as Categoria,\r\n    Pagamentos: [],\r\n    UltimoPagamento: undefined,\r\n    Variavel: false,\r\n    StatusId: StatusContaEnum.Pendente,\r\n  };\r\n\r\n  TipoContaId: number = 0;\r\n  Categorias: RespostaApi<Categoria[]>= {} as RespostaApi<Categoria[]>;\r\n\r\n  constructor(\r\n    private contaService: ContaService,\r\n    private contaVariavelService: ContaVariavelService,\r\n    private categoriaService: CategoriaService,\r\n    private validacaoService: ValidacaoService,\r\n    private respostaApiService: RespostaApiService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    const tipo = this.route.snapshot.paramMap.get('tipo');\r\n\r\n    this.categoriaService.listar().subscribe({\r\n      next: (result) => {\r\n        this.Categorias = result;\r\n      },\r\n      error: (err) => {\r\n        this.respostaApiService.tratarRespostaApi(err);\r\n        this.router.navigate(['/contas']);\r\n      }\r\n    });\r\n\r\n    if (id != null) {\r\n      if (tipo == TipoContaEnum.Variavel.toLocaleString()) {\r\n        this.TipoContaId = TipoContaEnum.Variavel;\r\n        this.contaVariavelService.buscarPorId(id!).subscribe({\r\n          next: (contaDto) => {\r\n          this.Conta = ContaMapper.ContaVariavelDtoToConta(contaDto.valor);\r\n          },\r\n          error: (err) => {\r\n            this.respostaApiService.tratarRespostaApi(err);\r\n            this.router.navigate(['/contas']);\r\n          }\r\n        });\r\n      }\r\n      else if (tipo == TipoContaEnum.Fixa.toLocaleString()) {\r\n        this.TipoContaId = TipoContaEnum.Fixa;\r\n        this.contaService.buscarPorId(id!).subscribe({\r\n          next: (contaDto) => {\r\n          this.Conta = ContaMapper.ContaDtoToConta(contaDto.valor);\r\n          },\r\n          error: (err) => {\r\n            this.respostaApiService.tratarRespostaApi(err);\r\n            this.router.navigate(['/contas']);\r\n          }\r\n        });\r\n      }\r\n      if (this.TipoContaId == TipoContaEnum.Variavel) {\r\n        document.getElementById(\"divValor\")!.style.display = \"none\";\r\n      }\r\n    } else {\r\n      this.router.navigate(['/contas']);\r\n    }\r\n  }\r\n\r\n  selecionaTipoConta() {\r\n    let tipoConta = (<HTMLInputElement>document.getElementById(\"tipoConta\")).value;\r\n    if (tipoConta == TipoContaEnum.Fixa.toLocaleString()) {\r\n      document.getElementById(\"divValor\")!.style.display = \"flex\";\r\n    } else {\r\n      document.getElementById(\"divValor\")!.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  salvarConta() {\r\n    if (!this.validarCamposObrigatorios(this.Conta.Variavel)) {\r\n      return;\r\n    }\r\n    if (this.TipoContaId == TipoContaEnum.Fixa) {\r\n      this.contaService.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaDto(this.Conta)).subscribe({\r\n        next: (result) => {\r\n          this.respostaApiService.tratarRespostaApi(result);\r\n          this.router.navigate(['/contas']);\r\n        },\r\n        error: (err) => {\r\n          this.respostaApiService.tratarRespostaApi(err);\r\n        }\r\n      });\r\n    }\r\n    else if (this.TipoContaId == TipoContaEnum.Variavel){\r\n      this.contaVariavelService.atualizar(this.Conta.Id.toLocaleString(), ContaMapper.ContaToUpdateContaVariavelDto(this.Conta)).subscribe({\r\n        next: (result) => {\r\n          this.respostaApiService.tratarRespostaApi(result);\r\n          this.router.navigate(['/contas']);\r\n        },\r\n        error: (err) => {\r\n          this.respostaApiService.tratarRespostaApi(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelar() {\r\n    this.router.navigate(['/contas']);\r\n  }\r\n\r\n  validarCamposObrigatorios(variavel: boolean): boolean {\r\n    let erros: number = 0;\r\n    let camposObrigatorios = ['txtDescricao', 'txtDiaVencimento', 'selCategoriaId'];\r\n    if (variavel) {\r\n      camposObrigatorios.push('txtValorInteiro');\r\n      camposObrigatorios.push('txtValorCentavos');\r\n    }\r\n    camposObrigatorios.forEach(campo => {\r\n      if (!this.campoObrigatorio(campo)) {\r\n        erros++;\r\n      }\r\n    });\r\n    return erros == 0 ? true : false;\r\n  }\r\n\r\n  campoObrigatorio(campoId: string): boolean {\r\n    let campo = <HTMLInputElement>document.getElementById(campoId)!;\r\n    let campoErro = document.getElementById('erro_' + campoId)!;\r\n    if (campo.value === \"\" || campo.value == null || campo.value == undefined) {\r\n      campo.classList.add('campo-obrigatorio');\r\n      campoErro.style.display = 'block';\r\n      campoErro.innerHTML = \"Campo obrigatório\";\r\n      return false;\r\n    }\r\n    else {\r\n      campoErro.style.display = 'none';\r\n      campo.classList.remove('campo-obrigatorio');\r\n      return true;\r\n    }\r\n  }\r\n\r\n  apenasNumeros(event: any) {\r\n    if (!this.validacaoService.apenasNumeros(event)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container main ff-verdana\">\r\n  <div class=\"titulo-pagina ff-verdana\">\r\n    <h1>Editar Conta</h1>\r\n  </div>\r\n  <form (ngSubmit)=\"salvarConta()\" class=\"form conteudo-pagina\">\r\n    <div class=\"row\">\r\n      <div class=\"col-4\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtDescricao\">Descrição</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtDescricao\" placeholder=\"Descrição\" name=\"Descricao\"\r\n          (focusout)=\"campoObrigatorio('txtDescricao')\" [(ngModel)]=\"Conta.Descricao\">\r\n          <label class=\"form-validation\" id=\"erro_txtDescricao\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtDiaVencimento\">Dia venc.:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtDiaVencimento\" placeholder=\"Dia vencimento\" name=\"DiaVencimento\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\"\r\n          (focusout)=\"campoObrigatorio('txtDiaVencimento')\" [(ngModel)]=\"Conta.DiaVencimento\">\r\n          <label class=\"form-validation\" id=\"erro_txtDiaVencimento\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtTipoContaId\">Tipo</label>\r\n          <input *ngIf=\"Conta.Variavel\" type=\"text\" class=\"form-control\" value=\"Variável\" readonly id=\"txtTipoContaId\">\r\n          <input *ngIf=\"!Conta.Variavel\" type=\"text\" class=\"form-control\" value=\"Fixa\" readonly>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"selCategoriaId\">Categoria</label>\r\n          <select id=\"selCategoriaId\" class=\"form-control\" name=\"CategoriaId\" (focusout)=\"campoObrigatorio('selCategoriaId')\" [(ngModel)]=\"Conta.Categoria.Id\">\r\n            <option value=\"\">Selecione...</option>\r\n            <option *ngFor=\"let categoria of Categorias.valor\" [value]=\"categoria.Id\">{{ categoria.Descricao }}</option>\r\n          </select>\r\n          <label class=\"form-validation\" id=\"erro_selCategoriaId\"></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\" id=\"divValor\">\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtValorInteiro\">Valor inteiro</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtValorInteiro\" placeholder=\"Valor\" name=\"ValorInteiro\"\r\n          (focusout)=\"campoObrigatorio('txtValorInteiro')\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorInteiro\">\r\n          <label class=\"form-validation\" id=\"erro_txtValorInteiro\"></label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"txtValorCentavos\">Valor centavos</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"txtValorCentavos\" placeholder=\"Valor Centavos\" name=\"ValorCentavos\"\r\n          (focusout)=\"campoObrigatorio('txtValorCentavos')\"\r\n          (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"Conta.ValorCentavos\">\r\n          <label class=\"form-validation\" id=\"erro_txtValorCentavos\"></label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" id=\"btnSubmit\" title=\"Salvar\" class=\"btn\">Salvar</button>\r\n          <button type=\"button\" id=\"btnCancelar\" title=\"Cancelar\" class=\"btn btn-red\" (click)=\"cancelar()\">Cancelar</button>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}