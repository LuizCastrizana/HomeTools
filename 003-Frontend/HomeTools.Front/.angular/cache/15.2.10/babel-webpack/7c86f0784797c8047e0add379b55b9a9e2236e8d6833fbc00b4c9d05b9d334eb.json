{"ast":null,"code":"import { TipoAlertaEnum } from 'src/app/enums/tipoAlertaEnum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/validacao.service\";\nimport * as i2 from \"src/app/services/Financas/pagamento-conta.service\";\nimport * as i3 from \"src/app/services/Financas/pagamento-conta-variavel.service\";\nimport * as i4 from \"src/app/services/feedback.service\";\nimport * as i5 from \"src/app/services/resposta-api.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nfunction IncluirPagamentoContaComponent_input_62_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 47);\n    i0.ɵɵlistener(\"focusout\", function IncluirPagamentoContaComponent_input_62_Template_input_focusout_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.campoObrigatorio(\"txtValorInteiro\"));\n    })(\"keypress\", function IncluirPagamentoContaComponent_input_62_Template_input_keypress_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.apenasNumeros($event));\n    })(\"paste\", function IncluirPagamentoContaComponent_input_62_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.apenasNumeros($event));\n    })(\"ngModelChange\", function IncluirPagamentoContaComponent_input_62_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.PagamentoContaVariavel.ValorInteiro = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.PagamentoContaVariavel.ValorInteiro);\n  }\n}\nfunction IncluirPagamentoContaComponent_input_63_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 48);\n    i0.ɵɵlistener(\"ngModelChange\", function IncluirPagamentoContaComponent_input_63_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.Conta.ValorInteiro = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.Conta.ValorInteiro);\n  }\n}\nfunction IncluirPagamentoContaComponent_input_69_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 49);\n    i0.ɵɵlistener(\"focusout\", function IncluirPagamentoContaComponent_input_69_Template_input_focusout_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.campoObrigatorio(\"txtValorCentavos\"));\n    })(\"keypress\", function IncluirPagamentoContaComponent_input_69_Template_input_keypress_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.apenasNumeros($event));\n    })(\"paste\", function IncluirPagamentoContaComponent_input_69_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.apenasNumeros($event));\n    })(\"ngModelChange\", function IncluirPagamentoContaComponent_input_69_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.PagamentoContaVariavel.ValorCentavos = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.PagamentoContaVariavel.ValorCentavos);\n  }\n}\nfunction IncluirPagamentoContaComponent_input_70_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 50);\n    i0.ɵɵlistener(\"ngModelChange\", function IncluirPagamentoContaComponent_input_70_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.Conta.ValorCentavos = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.Conta.ValorCentavos);\n  }\n}\nexport class IncluirPagamentoContaComponent {\n  constructor(validacaoService, pagamentoContaService, pagamentoContaVariavelService, feedbackService, respostaApiService, router) {\n    this.validacaoService = validacaoService;\n    this.pagamentoContaService = pagamentoContaService;\n    this.pagamentoContaVariavelService = pagamentoContaVariavelService;\n    this.feedbackService = feedbackService;\n    this.respostaApiService = respostaApiService;\n    this.router = router;\n    this.Conta = {};\n    this.PagamentoConta = {};\n    this.PagamentoContaVariavel = {};\n    this.DataPagamento = new Date();\n    this.MesReferencia = new Date(Date.now()).getMonth() + 1;\n    this.AnoReferencia = new Date(Date.now()).getFullYear();\n  }\n  ngOnInit() {}\n  incluirPagamento() {\n    if (!this.validarCamposObrigatorios(this.Conta.Variavel)) {\n      return;\n    }\n    if (this.Conta.Variavel) {\n      this.PagamentoContaVariavel.ContaVariavelId = this.Conta.Id;\n      this.PagamentoContaVariavel.DataPagamento = this.DataPagamento;\n      this.PagamentoContaVariavel.MesReferencia = this.MesReferencia;\n      this.PagamentoContaVariavel.AnoReferencia = this.AnoReferencia;\n      this.pagamentoContaVariavelService.create(this.PagamentoContaVariavel).subscribe({\n        next: pagamentoContaVariavel => {\n          let pagamento = {\n            Id: pagamentoContaVariavel.valor.Id,\n            DataPagamento: pagamentoContaVariavel.valor.DataPagamento,\n            ValorInteiro: pagamentoContaVariavel.valor.ValorInteiro,\n            ValorCentavos: pagamentoContaVariavel.valor.ValorCentavos,\n            MesReferencia: pagamentoContaVariavel.valor.MesReferencia,\n            AnoReferencia: pagamentoContaVariavel.valor.AnoReferencia,\n            ContaId: pagamentoContaVariavel.valor.ContaId\n          };\n          this.Conta.Pagamentos.push(pagamento);\n          let dadosFeedback = {\n            Id: 'feedback',\n            Titulo: \"Sucesso!\",\n            Mensagem: \"Pagamento incluído com sucesso!\",\n            TipoAlerta: TipoAlertaEnum.Sucesso\n          };\n          this.feedbackService.gerarFeedbackAlerta(dadosFeedback);\n          this.router.navigateByUrl('/', {\n            skipLocationChange: true\n          }).then(() => {\n            this.router.navigate(['/contas']);\n          });\n        },\n        error: error => {\n          this.respostaApiService.tratarRespostaApi(error);\n          document.getElementById('modalIncluirPagamento').style.display = 'none';\n        }\n      });\n    } else {\n      this.PagamentoConta.ContaId = this.Conta.Id;\n      this.PagamentoConta.DataPagamento = this.DataPagamento;\n      this.PagamentoConta.MesReferencia = this.MesReferencia;\n      this.PagamentoConta.AnoReferencia = this.AnoReferencia;\n      this.pagamentoContaService.create(this.PagamentoConta).subscribe({\n        next: pagamentoConta => {\n          let pagamento = {\n            Id: pagamentoConta.valor.Id,\n            DataPagamento: pagamentoConta.valor.DataPagamento,\n            ValorInteiro: 0,\n            ValorCentavos: 0,\n            MesReferencia: pagamentoConta.valor.MesReferencia,\n            AnoReferencia: pagamentoConta.valor.AnoReferencia,\n            ContaId: pagamentoConta.valor.ContaId\n          };\n          this.Conta.Pagamentos.push(pagamento);\n          let dadosFeedback = {\n            Id: 'feedback',\n            Titulo: \"Sucesso!\",\n            Mensagem: \"Pagamento incluído com sucesso!\",\n            TipoAlerta: TipoAlertaEnum.Sucesso\n          };\n          this.feedbackService.gerarFeedbackAlerta(dadosFeedback);\n          this.router.navigateByUrl('/', {\n            skipLocationChange: true\n          }).then(() => {\n            this.router.navigate(['/contas']);\n          });\n        },\n        error: error => {\n          this.respostaApiService.tratarRespostaApi(error);\n          document.getElementById('modalIncluirPagamento').style.display = 'none';\n        }\n      });\n    }\n  }\n  cancelar() {\n    this.removerValidacao();\n    document.getElementById('modalIncluirPagamento').style.display = 'none';\n  }\n  apenasNumeros(event) {\n    if (!this.validacaoService.apenasNumeros(event)) {\n      event.preventDefault();\n    }\n  }\n  validarCamposObrigatorios(variavel) {\n    let erros = 0;\n    let camposObrigatorios = ['txtData', 'txtAno'];\n    if (variavel) {\n      camposObrigatorios.push('txtValorInteiro');\n      camposObrigatorios.push('txtValorCentavos');\n    }\n    camposObrigatorios.forEach(campo => {\n      if (!this.campoObrigatorio(campo)) {\n        erros++;\n      }\n    });\n    return erros == 0 ? true : false;\n  }\n  removerValidacao() {\n    let campos = ['txtData', 'txtAno', 'txtValorInteiro', 'txtValorCentavos'];\n    campos.forEach(campo => {\n      document.getElementById(campo).classList.remove('campo-obrigatorio');\n      let campoErro = document.getElementById('erro_' + campo);\n      campoErro.style.display = 'none';\n      campoErro.innerHTML = \"\";\n    });\n  }\n  campoObrigatorio(campoId) {\n    let campo = document.getElementById(campoId);\n    let campoErro = document.getElementById('erro_' + campoId);\n    if (campo.value === \"\") {\n      campo.classList.add('campo-obrigatorio');\n      campoErro.style.display = 'block';\n      campoErro.innerHTML = \"Campo obrigatório\";\n      return false;\n    } else {\n      campoErro.style.display = 'none';\n      campo.classList.remove('campo-obrigatorio');\n      return true;\n    }\n  }\n  static #_ = this.ɵfac = function IncluirPagamentoContaComponent_Factory(t) {\n    return new (t || IncluirPagamentoContaComponent)(i0.ɵɵdirectiveInject(i1.ValidacaoService), i0.ɵɵdirectiveInject(i2.PagamentoContaService), i0.ɵɵdirectiveInject(i3.PagamentoContaVariavelService), i0.ɵɵdirectiveInject(i4.FeedbackService), i0.ɵɵdirectiveInject(i5.RespostaApiService), i0.ɵɵdirectiveInject(i6.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IncluirPagamentoContaComponent,\n    selectors: [[\"app-incluir-pagamento-conta\"]],\n    inputs: {\n      Conta: \"Conta\"\n    },\n    decls: 79,\n    vars: 8,\n    consts: [[\"id\", \"modalIncluirPagamento\", 1, \"incluir-pagamento-modal\", \"ff-verdana\"], [1, \"modal\"], [1, \"cabecalho-modal\"], [1, \"texto\"], [1, \"img\"], [\"src\", \"../../../../assets/img/add-pagamento-icon.png\"], [1, \"conteudo-modal\"], [1, \"form\"], [1, \"row\"], [1, \"col-6\"], [1, \"form-group\"], [\"for\", \"txtConta\"], [\"type\", \"text\", \"id\", \"txtConta\", \"name\", \"Conta\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"divData\", 1, \"col-6\"], [\"for\", \"txtData\"], [\"type\", \"date\", \"id\", \"txtData\", \"placeholder\", \"Data\", \"name\", \"Data\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtData\", 1, \"form-validation\"], [\"for\", \"selMes\"], [\"id\", \"selMes\", \"name\", \"Mes\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"value\", \"5\"], [\"value\", \"6\"], [\"value\", \"7\"], [\"value\", \"8\"], [\"value\", \"9\"], [\"value\", \"10\"], [\"value\", \"11\"], [\"value\", \"12\"], [\"for\", \"txtAno\"], [\"type\", \"text\", \"id\", \"txtAno\", \"placeholder\", \"Ano\", \"name\", \"Ano\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"id\", \"erro_txtAno\", 1, \"form-validation\"], [\"id\", \"divValores\", 1, \"row\"], [\"for\", \"txtValorInteiro\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"txtValorInteiro\", \"placeholder\", \"Valor\", \"name\", \"ValorInteiro\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"txtValorInteiro\", \"name\", \"ValorInteiro\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"erro_txtValorInteiro\", 1, \"form-validation\"], [\"for\", \"txtValorCentavos\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"txtValorCentavos\", \"placeholder\", \"Valor\", \"name\", \"ValorCentavos\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"form-control\", \"id\", \"txtValorCentavos\", \"name\", \"ValorCentavos\", \"disabled\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"id\", \"erro_txtValorCentavos\", 1, \"form-validation\"], [1, \"acoes-modal\"], [\"id\", \"btnCofirmar\", \"title\", \"Confirmar\", 1, \"btn\", 3, \"click\"], [\"id\", \"btnCancelar\", \"title\", \"Cancelar\", 1, \"btn\", \"btn-red\", 3, \"click\"], [1, \"overlay\"], [\"type\", \"text\", \"id\", \"txtValorInteiro\", \"placeholder\", \"Valor\", \"name\", \"ValorInteiro\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"txtValorInteiro\", \"name\", \"ValorInteiro\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"txtValorCentavos\", \"placeholder\", \"Valor\", \"name\", \"ValorCentavos\", 1, \"form-control\", 3, \"ngModel\", \"focusout\", \"keypress\", \"paste\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"txtValorCentavos\", \"name\", \"ValorCentavos\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function IncluirPagamentoContaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Incluir Pagamento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵelement(6, \"img\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 9)(11, \"div\", 10)(12, \"label\", 11);\n        i0.ɵɵtext(13, \"Conta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function IncluirPagamentoContaComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.Conta.Descricao = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 13)(16, \"div\", 10)(17, \"label\", 14);\n        i0.ɵɵtext(18, \"Data do pagamento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 15);\n        i0.ɵɵlistener(\"focusout\", function IncluirPagamentoContaComponent_Template_input_focusout_19_listener() {\n          return ctx.campoObrigatorio(\"txtData\");\n        })(\"keypress\", function IncluirPagamentoContaComponent_Template_input_keypress_19_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function IncluirPagamentoContaComponent_Template_input_paste_19_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function IncluirPagamentoContaComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.DataPagamento = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"label\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"div\", 9)(23, \"div\", 10)(24, \"label\", 17);\n        i0.ɵɵtext(25, \"M\\u00EAs refer\\u00EAncia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function IncluirPagamentoContaComponent_Template_select_ngModelChange_26_listener($event) {\n          return ctx.MesReferencia = $event;\n        });\n        i0.ɵɵelementStart(27, \"option\", 19);\n        i0.ɵɵtext(28, \"Janeiro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 20);\n        i0.ɵɵtext(30, \"Fevereiro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 21);\n        i0.ɵɵtext(32, \"Mar\\u00E7o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 22);\n        i0.ɵɵtext(34, \"Abril\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 23);\n        i0.ɵɵtext(36, \"Maio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 24);\n        i0.ɵɵtext(38, \"Junho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 25);\n        i0.ɵɵtext(40, \"Julho\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"option\", 26);\n        i0.ɵɵtext(42, \"Agosto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"option\", 27);\n        i0.ɵɵtext(44, \"Setembro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"option\", 28);\n        i0.ɵɵtext(46, \"Outubro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"option\", 29);\n        i0.ɵɵtext(48, \"Novembro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"option\", 30);\n        i0.ɵɵtext(50, \"Dezembro\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(51, \"div\", 9)(52, \"div\", 10)(53, \"label\", 31);\n        i0.ɵɵtext(54, \"Ano refer\\u00EAncia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"input\", 32);\n        i0.ɵɵlistener(\"focusout\", function IncluirPagamentoContaComponent_Template_input_focusout_55_listener() {\n          return ctx.campoObrigatorio(\"txtAno\");\n        })(\"keypress\", function IncluirPagamentoContaComponent_Template_input_keypress_55_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"paste\", function IncluirPagamentoContaComponent_Template_input_paste_55_listener($event) {\n          return ctx.apenasNumeros($event);\n        })(\"ngModelChange\", function IncluirPagamentoContaComponent_Template_input_ngModelChange_55_listener($event) {\n          return ctx.AnoReferencia = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(56, \"label\", 33);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"div\", 34)(58, \"div\", 9)(59, \"div\", 10)(60, \"label\", 35);\n        i0.ɵɵtext(61, \"Valor inteiro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(62, IncluirPagamentoContaComponent_input_62_Template, 1, 1, \"input\", 36);\n        i0.ɵɵtemplate(63, IncluirPagamentoContaComponent_input_63_Template, 1, 1, \"input\", 37);\n        i0.ɵɵelement(64, \"label\", 38);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 9)(66, \"div\", 10)(67, \"label\", 39);\n        i0.ɵɵtext(68, \"Valor centavos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(69, IncluirPagamentoContaComponent_input_69_Template, 1, 1, \"input\", 40);\n        i0.ɵɵtemplate(70, IncluirPagamentoContaComponent_input_70_Template, 1, 1, \"input\", 41);\n        i0.ɵɵelement(71, \"label\", 42);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(72, \"div\", 43)(73, \"button\", 44);\n        i0.ɵɵlistener(\"click\", function IncluirPagamentoContaComponent_Template_button_click_73_listener() {\n          return ctx.incluirPagamento();\n        });\n        i0.ɵɵtext(74, \"Incluir\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(75, \" \\u00A0 \");\n        i0.ɵɵelementStart(76, \"button\", 45);\n        i0.ɵɵlistener(\"click\", function IncluirPagamentoContaComponent_Template_button_click_76_listener() {\n          return ctx.cancelar();\n        });\n        i0.ɵɵtext(77, \"Cancelar\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(78, \"div\", 46);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.Conta.Descricao);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.DataPagamento);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.MesReferencia);\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"ngModel\", ctx.AnoReferencia);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.Conta.Variavel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.Conta.Variavel);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.Conta.Variavel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.Conta.Variavel);\n      }\n    },\n    dependencies: [i7.NgIf, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgModel],\n    styles: [\".incluir-pagamento-modal[_ngcontent-%COMP%] {\\r\\n  display: none;\\r\\n}\\r\\n.modal[_ngcontent-%COMP%] {\\r\\n  text-align: left;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9maW5hbmNhcy9jb250YXMvaW5jbHVpci1wYWdhbWVudG8tY29udGEvaW5jbHVpci1wYWdhbWVudG8tY29udGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmluY2x1aXItcGFnYW1lbnRvLW1vZGFsIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5tb2RhbCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["TipoAlertaEnum","i0","IncluirPagamentoContaComponent","constructor","validacaoService","pagamentoContaService","pagamentoContaVariavelService","feedbackService","respostaApiService","router","Date","now","getMonth","getFullYear","ngOnInit","incluirPagamento","validarCamposObrigatorios","Conta","Variavel","PagamentoContaVariavel","ContaVariavelId","Id","DataPagamento","MesReferencia","AnoReferencia","create","subscribe","next","pagamentoContaVariavel","pagamento","valor","ValorInteiro","ValorCentavos","ContaId","Pagamentos","push","dadosFeedback","Titulo","Mensagem","TipoAlerta","Sucesso","gerarFeedbackAlerta","navigateByUrl","skipLocationChange","then","navigate","error","tratarRespostaApi","document","getElementById","style","display","PagamentoConta","pagamentoConta","cancelar","removerValidacao","apenasNumeros","event","preventDefault","variavel","erros","camposObrigatorios","forEach","campo","campoObrigatorio","campos","classList","remove","campoErro","innerHTML","campoId","value","add","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\incluir-pagamento-conta\\incluir-pagamento-conta.component.ts","D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\components\\financas\\contas\\incluir-pagamento-conta\\incluir-pagamento-conta.component.html"],"sourcesContent":["import { Router } from '@angular/router';\r\nimport { TipoAlertaEnum } from 'src/app/enums/tipoAlertaEnum';\r\nimport { PagamentoConta } from '../../../../interfaces/financas/PagamentoConta';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { CreatePagamentoContaDto } from 'src/app/dto/financas/contas/createPagamentoContaDto';\r\nimport { CreatePagamentoContaVariavelDto } from 'src/app/dto/financas/contas/createPagamentoContaVariavelDto';\r\nimport { DadosFeedbackAlerta } from 'src/app/interfaces/dadosFeedbackAlerta';\r\nimport { Conta } from 'src/app/interfaces/financas/Conta';\r\nimport { PagamentoContaVariavelService } from 'src/app/services/Financas/pagamento-conta-variavel.service';\r\nimport { PagamentoContaService } from 'src/app/services/Financas/pagamento-conta.service';\r\nimport { FeedbackService } from 'src/app/services/feedback.service';\r\nimport { ValidacaoService } from 'src/app/services/validacao.service';\r\nimport { RespostaApiService } from 'src/app/services/resposta-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-incluir-pagamento-conta',\r\n  templateUrl: './incluir-pagamento-conta.component.html',\r\n  styleUrls: ['./incluir-pagamento-conta.component.css']\r\n})\r\nexport class IncluirPagamentoContaComponent implements OnInit {\r\n\r\n  @Input() Conta: Conta = {} as Conta;\r\n  PagamentoConta: CreatePagamentoContaDto = {} as CreatePagamentoContaDto;\r\n  PagamentoContaVariavel: CreatePagamentoContaVariavelDto = {} as CreatePagamentoContaVariavelDto;\r\n\r\n  DataPagamento: Date = new Date();\r\n  MesReferencia: number = new Date(Date.now()).getMonth() + 1;\r\n  AnoReferencia: number = new Date(Date.now()).getFullYear();\r\n\r\n  constructor(\r\n    private validacaoService: ValidacaoService,\r\n    private pagamentoContaService: PagamentoContaService,\r\n    private pagamentoContaVariavelService: PagamentoContaVariavelService,\r\n    private feedbackService: FeedbackService,\r\n    private respostaApiService: RespostaApiService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  incluirPagamento(): void {\r\n    if (!this.validarCamposObrigatorios(this.Conta.Variavel)) {\r\n      return;\r\n    }\r\n    if (this.Conta.Variavel){\r\n      this.PagamentoContaVariavel.ContaVariavelId = this.Conta.Id!;\r\n      this.PagamentoContaVariavel.DataPagamento = this.DataPagamento;\r\n      this.PagamentoContaVariavel.MesReferencia = this.MesReferencia;\r\n      this.PagamentoContaVariavel.AnoReferencia = this.AnoReferencia;\r\n      this.pagamentoContaVariavelService.create(this.PagamentoContaVariavel).subscribe({\r\n        next: (pagamentoContaVariavel) => {\r\n          let pagamento = {\r\n            Id: pagamentoContaVariavel.valor.Id,\r\n            DataPagamento: pagamentoContaVariavel.valor.DataPagamento,\r\n            ValorInteiro: pagamentoContaVariavel.valor.ValorInteiro,\r\n            ValorCentavos: pagamentoContaVariavel.valor.ValorCentavos,\r\n            MesReferencia: pagamentoContaVariavel.valor.MesReferencia,\r\n            AnoReferencia: pagamentoContaVariavel.valor.AnoReferencia,\r\n            ContaId: pagamentoContaVariavel.valor.ContaId\r\n          } as PagamentoConta;\r\n          this.Conta.Pagamentos.push(pagamento);\r\n          let dadosFeedback = {\r\n            Id: 'feedback',\r\n            Titulo: \"Sucesso!\",\r\n            Mensagem: \"Pagamento incluído com sucesso!\",\r\n            TipoAlerta: TipoAlertaEnum.Sucesso,\r\n          } as DadosFeedbackAlerta;\r\n          this.feedbackService.gerarFeedbackAlerta(dadosFeedback);\r\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n            this.router.navigate(['/contas']);\r\n          });\r\n        }, error: (error) => {\r\n           this.respostaApiService.tratarRespostaApi(error);\r\n           document.getElementById('modalIncluirPagamento')!.style.display = 'none';\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.PagamentoConta.ContaId = this.Conta.Id!;\r\n      this.PagamentoConta.DataPagamento = this.DataPagamento;\r\n      this.PagamentoConta.MesReferencia = this.MesReferencia;\r\n      this.PagamentoConta.AnoReferencia = this.AnoReferencia;\r\n      this.pagamentoContaService.create(this.PagamentoConta).subscribe({\r\n        next: (pagamentoConta) => {\r\n          let pagamento = {\r\n            Id: pagamentoConta.valor.Id,\r\n            DataPagamento: pagamentoConta.valor.DataPagamento,\r\n            ValorInteiro: 0,\r\n            ValorCentavos: 0,\r\n            MesReferencia: pagamentoConta.valor.MesReferencia,\r\n            AnoReferencia: pagamentoConta.valor.AnoReferencia,\r\n            ContaId: pagamentoConta.valor.ContaId\r\n          } as PagamentoConta;\r\n          this.Conta.Pagamentos.push(pagamento);\r\n          let dadosFeedback = {\r\n            Id: 'feedback',\r\n            Titulo: \"Sucesso!\",\r\n            Mensagem: \"Pagamento incluído com sucesso!\",\r\n            TipoAlerta: TipoAlertaEnum.Sucesso,\r\n          } as DadosFeedbackAlerta;\r\n          this.feedbackService.gerarFeedbackAlerta(dadosFeedback);\r\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n            this.router.navigate(['/contas']);\r\n          });\r\n        }, error: (error) => {\r\n           this.respostaApiService.tratarRespostaApi(error);\r\n           document.getElementById('modalIncluirPagamento')!.style.display = 'none';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelar() {\r\n    this.removerValidacao();\r\n    document.getElementById('modalIncluirPagamento')!.style.display = 'none';\r\n  }\r\n\r\n  apenasNumeros(event: any) {\r\n    if (!this.validacaoService.apenasNumeros(event)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validarCamposObrigatorios(variavel: boolean): boolean {\r\n    let erros: number = 0;\r\n    let camposObrigatorios = ['txtData', 'txtAno'];\r\n    if (variavel) {\r\n      camposObrigatorios.push('txtValorInteiro');\r\n      camposObrigatorios.push('txtValorCentavos');\r\n    }\r\n    camposObrigatorios.forEach(campo => {\r\n      if (!this.campoObrigatorio(campo)) {\r\n        erros++;\r\n      }\r\n    });\r\n    return erros == 0 ? true : false;\r\n  }\r\n\r\n  removerValidacao() {\r\n    let campos = ['txtData', 'txtAno', 'txtValorInteiro', 'txtValorCentavos'];\r\n    campos.forEach(campo => {\r\n      document.getElementById(campo)!.classList.remove('campo-obrigatorio');\r\n      let campoErro = document.getElementById('erro_' + campo)!;\r\n      campoErro.style.display = 'none';\r\n      campoErro.innerHTML = \"\";\r\n    });\r\n  }\r\n\r\n  campoObrigatorio(campoId: string): boolean {\r\n    let campo = <HTMLInputElement>document.getElementById(campoId)!;\r\n    let campoErro = document.getElementById('erro_' + campoId)!;\r\n    if (campo.value === \"\") {\r\n      campo.classList.add('campo-obrigatorio');\r\n      campoErro.style.display = 'block';\r\n      campoErro.innerHTML = \"Campo obrigatório\";\r\n      return false;\r\n    }\r\n    else {\r\n      campoErro.style.display = 'none';\r\n      campo.classList.remove('campo-obrigatorio');\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"incluir-pagamento-modal ff-verdana\" id=\"modalIncluirPagamento\">\r\n  <div class=\"modal\">\r\n    <div class=\"cabecalho-modal\">\r\n      <span class=\"texto\">Incluir Pagamento</span><span class=\"img\"><img src=\"../../../../assets/img/add-pagamento-icon.png\"></span>\r\n    </div>\r\n    <div class=\"conteudo-modal\">\r\n      <div class=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"txtConta\">Conta</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"txtConta\" name=\"Conta\" [(ngModel)]=\"Conta.Descricao\" disabled>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\" id=\"divData\">\r\n            <div class=\"form-group\">\r\n              <label for=\"txtData\">Data do pagamento</label>\r\n              <input type=\"date\" class=\"form-control\" id=\"txtData\" placeholder=\"Data\" name=\"Data\"\r\n              (focusout)=\"campoObrigatorio('txtData')\"\r\n              (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"DataPagamento\">\r\n              <label class=\"form-validation\" id=\"erro_txtData\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"selMes\">Mês referência</label>\r\n              <select class=\"form-control\" id=\"selMes\" name=\"Mes\" [(ngModel)]=\"MesReferencia\">\r\n                <option value=\"1\">Janeiro</option>\r\n                <option value=\"2\">Fevereiro</option>\r\n                <option value=\"3\">Março</option>\r\n                <option value=\"4\">Abril</option>\r\n                <option value=\"5\">Maio</option>\r\n                <option value=\"6\">Junho</option>\r\n                <option value=\"7\">Julho</option>\r\n                <option value=\"8\">Agosto</option>\r\n                <option value=\"9\">Setembro</option>\r\n                <option value=\"10\">Outubro</option>\r\n                <option value=\"11\">Novembro</option>\r\n                <option value=\"12\">Dezembro</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"txtAno\">Ano referência</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"txtAno\" placeholder=\"Ano\" name=\"Ano\"\r\n              (focusout)=\"campoObrigatorio('txtAno')\"\r\n              (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"AnoReferencia\">\r\n              <label class=\"form-validation\" id=\"erro_txtAno\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" id=\"divValores\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"txtValorInteiro\">Valor inteiro</label>\r\n              <input *ngIf=\"Conta.Variavel\" type=\"text\" class=\"form-control\" id=\"txtValorInteiro\" placeholder=\"Valor\" name=\"ValorInteiro\"\r\n              (focusout)=\"campoObrigatorio('txtValorInteiro')\"\r\n              (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"PagamentoContaVariavel.ValorInteiro\">\r\n              <input *ngIf=\"!Conta.Variavel\" type=\"text\" class=\"form-control\" id=\"txtValorInteiro\" name=\"ValorInteiro\" [(ngModel)]=\"Conta.ValorInteiro\" disabled>\r\n              <label class=\"form-validation\" id=\"erro_txtValorInteiro\"></label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"txtValorCentavos\">Valor centavos</label>\r\n              <input *ngIf=\"Conta.Variavel\" type=\"text\" class=\"form-control\" id=\"txtValorCentavos\" placeholder=\"Valor\" name=\"ValorCentavos\"\r\n              (focusout)=\"campoObrigatorio('txtValorCentavos')\"\r\n              (keypress)=\"apenasNumeros($event)\" (paste)=\"apenasNumeros($event)\" [(ngModel)]=\"PagamentoContaVariavel.ValorCentavos\">\r\n              <input *ngIf=\"!Conta.Variavel\" type=\"text\" class=\"form-control\" id=\"txtValorCentavos\" name=\"ValorCentavos\" [(ngModel)]=\"Conta.ValorCentavos\" disabled>\r\n              <label class=\"form-validation\" id=\"erro_txtValorCentavos\"></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"acoes-modal\">\r\n      <button class=\"btn\" id=\"btnCofirmar\" title=\"Confirmar\" (click)=\"incluirPagamento()\">Incluir</button>\r\n      &nbsp;\r\n      <button class=\"btn btn-red\" id=\"btnCancelar\" title=\"Cancelar\" (click)=\"cancelar()\">Cancelar</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"overlay\"></div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}