{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CompraService {\n  constructor(http) {\n    this.http = http;\n    this.API = environment.laPlataApiAdress + '/api/Compra';\n  }\n  listar() {\n    return this.http.get(this.API);\n  }\n  buscar(busca) {\n    const url = `${this.API}/?busca=${busca}`;\n    return this.http.get(url);\n  }\n  buscarPorId(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.get(url);\n  }\n  buscarPorCartaoId(id) {\n    const url = `${this.API}/ObterPorCartaoId/${id}`;\n    return this.http.get(url);\n  }\n  incluir(CreateContaDto) {\n    return this.http.post(this.API, CreateContaDto);\n  }\n  atualizar(id, UpdateContaDto) {\n    const url = `${this.API}/${id}`;\n    return this.http.put(url, UpdateContaDto);\n  }\n  excluir(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function CompraService_Factory(t) {\n    return new (t || CompraService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompraService,\n    factory: CompraService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEN,QAAG,GAAGH,WAAW,CAACI,gBAAgB,GAAG,aAAa;EAF5B;EAIxCC,MAAM;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAA+B,IAAI,CAACC,GAAG,CAAC;EAC9D;EAEAC,MAAM,CAACC,KAAa;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,WAAWE,KAAK,EAAE;IACzC,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAA+BI,GAAG,CAAC;EACzD;EAEAC,WAAW,CAACC,EAAU;IACpB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAA6BI,GAAG,CAAC;EACvD;EAEAG,iBAAiB,CAACD,EAAU;IAC1B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,qBAAqBK,EAAE,EAAE;IAChD,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAA+BI,GAAG,CAAC;EACzD;EAEAI,OAAO,CAAEC,cAA+B;IACtC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAA6B,IAAI,CAACT,GAAG,EAAEQ,cAAc,CAAC;EAC7E;EAEAE,SAAS,CAAEL,EAAU,EAAEM,cAA+B;IACpD,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACgB,GAAG,CAA6BT,GAAG,EAAEQ,cAAc,CAAC;EACvE;EAEAE,OAAO,CAAER,EAAU;IACjB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACkB,MAAM,CAA6BX,GAAG,CAAC;EAC1D;EAAC;qBArCUT,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAqB,SAAbrB,aAAa;IAAAsB,YAFZ;EAAM","names":["environment","CompraService","constructor","http","laPlataApiAdress","listar","get","API","buscar","busca","url","buscarPorId","id","buscarPorCartaoId","incluir","CreateContaDto","post","atualizar","UpdateContaDto","put","excluir","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\services\\Financas\\cartao\\compra.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RespostaApi } from 'src/app/dto/respostaApi';\nimport { environment } from 'src/environments/environment';\nimport { ReadCompraDto } from 'src/app/dto/financas/cartoes/readCompraDto';\nimport { CreateCompraDto } from 'src/app/dto/financas/cartoes/createCompraDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompraService {\n\n  constructor(private http: HttpClient) { }\n\n  private readonly  API = environment.laPlataApiAdress + '/api/Compra';\n\n  listar(): Observable<RespostaApi<ReadCompraDto[]>> {\n    return this.http.get<RespostaApi<ReadCompraDto[]>>(this.API);\n  }\n\n  buscar(busca: string): Observable<RespostaApi<ReadCompraDto[]>> {\n    const url = `${this.API}/?busca=${busca}`\n    return this.http.get<RespostaApi<ReadCompraDto[]>>(url)\n  }\n\n  buscarPorId(id: string): Observable<RespostaApi<ReadCompraDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.get<RespostaApi<ReadCompraDto>>(url)\n  }\n\n  buscarPorCartaoId(id: string): Observable<RespostaApi<ReadCompraDto[]>> {\n    const url = `${this.API}/ObterPorCartaoId/${id}`\n    return this.http.get<RespostaApi<ReadCompraDto[]>>(url)\n  }\n\n  incluir (CreateContaDto: CreateCompraDto): Observable<RespostaApi<ReadCompraDto>> {\n    return this.http.post<RespostaApi<ReadCompraDto>>(this.API, CreateContaDto)\n  }\n\n  atualizar (id: string, UpdateContaDto: CreateCompraDto): Observable<RespostaApi<ReadCompraDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.put<RespostaApi<ReadCompraDto>>(url, UpdateContaDto)\n  }\n\n  excluir (id: string): Observable<RespostaApi<ReadCompraDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.delete<RespostaApi<ReadCompraDto>>(url)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}