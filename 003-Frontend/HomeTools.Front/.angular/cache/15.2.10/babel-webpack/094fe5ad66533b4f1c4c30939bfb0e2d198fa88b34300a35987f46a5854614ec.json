{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContaService {\n  constructor(http) {\n    this.http = http;\n    this.API = environment.laPlataApiAdress + \"/api/Conta\";\n  }\n  listar() {\n    return this.http.get(this.API);\n  }\n  buscar(busca) {\n    const url = `${this.API}/?busca=${busca}`;\n    return this.http.get(url);\n  }\n  buscarPorId(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.get(url);\n  }\n  incluir(CreateContaDto) {\n    return this.http.post(this.API, CreateContaDto);\n  }\n  atualizar(id, UpdateContaDto) {\n    const url = `${this.API}/${id}`;\n    return this.http.put(url, UpdateContaDto);\n  }\n  excluir(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function ContaService_Factory(t) {\n    return new (t || ContaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContaService,\n    factory: ContaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAOA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEP,QAAG,GAAGH,WAAW,CAACI,gBAAgB,GAAG,YAAY;EAF1B;EAIxCC,MAAM;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAA8B,IAAI,CAACC,GAAG,CAAC;EAC7D;EAEAC,MAAM,CAACC,KAAa;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,WAAWE,KAAK,EAAE;IACzC,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAA8BI,GAAG,CAAC;EACxD;EAEAC,WAAW,CAACC,EAAU;IACpB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAA4BI,GAAG,CAAC;EACtD;EAEAG,OAAO,CAAEC,cAA8B;IACrC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAA4B,IAAI,CAACR,GAAG,EAAEO,cAAc,CAAC;EAC5E;EAEAE,SAAS,CAAEJ,EAAU,EAAEK,cAA8B;IACnD,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACe,GAAG,CAA4BR,GAAG,EAAEO,cAAc,CAAC;EACtE;EAEAE,OAAO,CAAEP,EAAU;IACjB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACiB,MAAM,CAA4BV,GAAG,CAAC;EACzD;EAAC;qBAhCUT,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAoB,SAAZpB,YAAY;IAAAqB,YAFX;EAAM","names":["environment","ContaService","constructor","http","laPlataApiAdress","listar","get","API","buscar","busca","url","buscarPorId","id","incluir","CreateContaDto","post","atualizar","UpdateContaDto","put","excluir","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\services\\Financas\\conta.service.ts"],"sourcesContent":["import { CreateContaDto } from 'src/app/dto/financas/contas/createContaDto';\nimport { UpdateContaDto } from 'src/app/dto/financas/contas/updateContaDto';\nimport { RespostaApi } from '../../dto/respostaApi';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ReadContaDto } from '../../dto/financas/contas/readContaDto';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContaService {\n\n  constructor(private http: HttpClient) { }\n\n  private readonly API = environment.laPlataApiAdress + \"/api/Conta\";\n\n  listar(): Observable<RespostaApi<ReadContaDto[]>> {\n    return this.http.get<RespostaApi<ReadContaDto[]>>(this.API);\n  }\n\n  buscar(busca: string): Observable<RespostaApi<ReadContaDto[]>> {\n    const url = `${this.API}/?busca=${busca}`\n    return this.http.get<RespostaApi<ReadContaDto[]>>(url)\n  }\n\n  buscarPorId(id: string): Observable<RespostaApi<ReadContaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.get<RespostaApi<ReadContaDto>>(url)\n  }\n\n  incluir (CreateContaDto: CreateContaDto): Observable<RespostaApi<ReadContaDto>> {\n    return this.http.post<RespostaApi<ReadContaDto>>(this.API, CreateContaDto)\n  }\n\n  atualizar (id: string, UpdateContaDto: UpdateContaDto): Observable<RespostaApi<ReadContaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.put<RespostaApi<ReadContaDto>>(url, UpdateContaDto)\n  }\n\n  excluir (id: string): Observable<RespostaApi<ReadContaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.delete<RespostaApi<ReadContaDto>>(url)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}