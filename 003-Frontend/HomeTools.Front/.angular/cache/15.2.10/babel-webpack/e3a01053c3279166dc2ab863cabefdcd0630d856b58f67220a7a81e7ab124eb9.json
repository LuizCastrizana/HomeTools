{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AssinaturaService {\n  constructor(http) {\n    this.http = http;\n    this.API = environment.laPlataApiAdress + '/api/Assinatura';\n  }\n  listar() {\n    return this.http.get(this.API);\n  }\n  buscar(busca) {\n    const url = `${this.API}/?busca=${busca}`;\n    return this.http.get(url);\n  }\n  buscarPorId(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.get(url);\n  }\n  buscarPorCartaoId(id) {\n    const url = `${this.API}/ObterPorCartaoId/${id}`;\n    return this.http.get(url);\n  }\n  incluir(CreateContaDto) {\n    return this.http.post(this.API, CreateContaDto);\n  }\n  atualizar(id, UpdateContaDto) {\n    const url = `${this.API}/${id}`;\n    return this.http.put(url, UpdateContaDto);\n  }\n  excluir(id) {\n    const url = `${this.API}/${id}`;\n    return this.http.delete(url);\n  }\n  static #_ = this.ɵfac = function AssinaturaService_Factory(t) {\n    return new (t || AssinaturaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AssinaturaService,\n    factory: AssinaturaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAMA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEN,QAAG,GAAGH,WAAW,CAACI,gBAAgB,GAAG,iBAAiB;EAFhC;EAIxCC,MAAM;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmC,IAAI,CAACC,GAAG,CAAC;EAClE;EAEAC,MAAM,CAACC,KAAa;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,WAAWE,KAAK,EAAE;IACzC,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAmCI,GAAG,CAAC;EAC7D;EAEAC,WAAW,CAACC,EAAU;IACpB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAiCI,GAAG,CAAC;EAC3D;EAEAG,iBAAiB,CAACD,EAAU;IAC1B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,qBAAqBK,EAAE,EAAE;IAChD,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAmCI,GAAG,CAAC;EAC7D;EAEAI,OAAO,CAAEC,cAAmC;IAC1C,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAiC,IAAI,CAACT,GAAG,EAAEQ,cAAc,CAAC;EACjF;EAEAE,SAAS,CAAEL,EAAU,EAAEM,cAAmC;IACxD,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACgB,GAAG,CAAiCT,GAAG,EAAEQ,cAAc,CAAC;EAC3E;EAEAE,OAAO,CAAER,EAAU;IACjB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACH,GAAG,IAAIK,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACkB,MAAM,CAAiCX,GAAG,CAAC;EAC9D;EAAC;qBArCUT,iBAAiB;EAAA;EAAA;WAAjBA,iBAAiB;IAAAqB,SAAjBrB,iBAAiB;IAAAsB,YAFhB;EAAM","names":["environment","AssinaturaService","constructor","http","laPlataApiAdress","listar","get","API","buscar","busca","url","buscarPorId","id","buscarPorCartaoId","incluir","CreateContaDto","post","atualizar","UpdateContaDto","put","excluir","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\GIT\\HomeTools\\003-Frontend\\HomeTools.Front\\src\\app\\services\\Financas\\cartao\\assinatura.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreateAssinaturaDto } from 'src/app/dto/financas/cartoes/createAssinaturaDto';\nimport { ReadAssinaturaDto } from 'src/app/dto/financas/cartoes/readAssinaturaDto';\nimport { RespostaApi } from 'src/app/dto/respostaApi';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssinaturaService {\n\n  constructor(private http: HttpClient) { }\n\n  private readonly  API = environment.laPlataApiAdress + '/api/Assinatura';\n\n  listar(): Observable<RespostaApi<ReadAssinaturaDto[]>> {\n    return this.http.get<RespostaApi<ReadAssinaturaDto[]>>(this.API);\n  }\n\n  buscar(busca: string): Observable<RespostaApi<ReadAssinaturaDto[]>> {\n    const url = `${this.API}/?busca=${busca}`\n    return this.http.get<RespostaApi<ReadAssinaturaDto[]>>(url)\n  }\n\n  buscarPorId(id: string): Observable<RespostaApi<ReadAssinaturaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.get<RespostaApi<ReadAssinaturaDto>>(url)\n  }\n\n  buscarPorCartaoId(id: string): Observable<RespostaApi<ReadAssinaturaDto[]>> {\n    const url = `${this.API}/ObterPorCartaoId/${id}`\n    return this.http.get<RespostaApi<ReadAssinaturaDto[]>>(url)\n  }\n\n  incluir (CreateContaDto: CreateAssinaturaDto): Observable<RespostaApi<ReadAssinaturaDto>> {\n    return this.http.post<RespostaApi<ReadAssinaturaDto>>(this.API, CreateContaDto)\n  }\n\n  atualizar (id: string, UpdateContaDto: CreateAssinaturaDto): Observable<RespostaApi<ReadAssinaturaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.put<RespostaApi<ReadAssinaturaDto>>(url, UpdateContaDto)\n  }\n\n  excluir (id: string): Observable<RespostaApi<ReadAssinaturaDto>> {\n    const url = `${this.API}/${id}`\n    return this.http.delete<RespostaApi<ReadAssinaturaDto>>(url)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}